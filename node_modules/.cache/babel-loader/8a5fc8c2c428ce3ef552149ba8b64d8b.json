{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\uikit\\\\widgets\\\\Menu\\\\Accordion.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MENU_ENTRY_HEIGHT } from \"./config\";\nimport { MenuEntry, LinkLabel } from \"./MenuEntry\";\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from \"../../components/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  // Safari fix\n  flex-shrink: 0;\n`;\n_c = Container;\nconst AccordionContent = styled.div`\n  max-height: ${({\n  isOpen,\n  maxHeight\n}) => isOpen ? `${maxHeight}px` : 0};\n  transition: max-height 0.3s ease-out;\n  overflow: hidden;\n  border-color: ${({\n  isOpen,\n  isPushed\n}) => isOpen && isPushed ? \"rgba(133, 133, 133, 0.1)\" : \"transparent\"};\n  border-style: solid;\n  border-width: 1px;\n`;\n_c2 = AccordionContent;\n\nconst Accordion = ({\n  label,\n  icon,\n  isPushed,\n  pushNav,\n  initialOpenState = false,\n  children,\n  className\n}) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(initialOpenState);\n\n  const handleClick = () => {\n    if (isPushed) {\n      setIsOpen(prevState => !prevState);\n    } else {\n      pushNav(true);\n      setIsOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(MenuEntry, {\n      onClick: handleClick,\n      className: className,\n      children: [icon, /*#__PURE__*/_jsxDEV(LinkLabel, {\n        isPushed: isPushed,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), isOpen ? /*#__PURE__*/_jsxDEV(ArrowDropUpIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AccordionContent, {\n      isOpen: isOpen,\n      isPushed: isPushed,\n      maxHeight: React.Children.count(children) * MENU_ENTRY_HEIGHT,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Accordion, \"mQDcZT0Wj4EA2OFLPXVfDha2PC4=\");\n\n_c3 = Accordion;\nexport default Accordion;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"AccordionContent\");\n$RefreshReg$(_c3, \"Accordion\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/widgets/Menu/Accordion.tsx"],"names":["React","useState","styled","MENU_ENTRY_HEIGHT","MenuEntry","LinkLabel","ArrowDropDownIcon","ArrowDropUpIcon","Container","div","AccordionContent","isOpen","maxHeight","isPushed","Accordion","label","icon","pushNav","initialOpenState","children","className","setIsOpen","handleClick","prevState","Children","count"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,QAAkC,UAAlC;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,aAArC;AAEA,SAASC,iBAAT,EAA4BC,eAA5B,QAAmD,sBAAnD;;AASA,MAAMC,SAAS,GAAGN,MAAM,CAACO,GAAI;AAC7B;AACA;AACA;AACA;AACA,CALA;KAAMD,S;AAON,MAAME,gBAAgB,GAAGR,MAAM,CAACO,GAA+D;AAC/F,gBAAgB,CAAC;AAAEE,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA4BD,MAAM,GAAI,GAAEC,SAAU,IAAhB,GAAsB,CAAG;AAC3E;AACA;AACA,kBAAkB,CAAC;AAAED,EAAAA,MAAF;AAAUE,EAAAA;AAAV,CAAD,KAA2BF,MAAM,IAAIE,QAAV,GAAqB,0BAArB,GAAkD,aAAe;AAC9G;AACA;AACA,CAPA;MAAMH,gB;;AASN,MAAMI,SAA0B,GAAG,CAAC;AAClCC,EAAAA,KADkC;AAElCC,EAAAA,IAFkC;AAGlCH,EAAAA,QAHkC;AAIlCI,EAAAA,OAJkC;AAKlCC,EAAAA,gBAAgB,GAAG,KALe;AAMlCC,EAAAA,QANkC;AAOlCC,EAAAA;AAPkC,CAAD,KAQ7B;AAAA;;AACJ,QAAM,CAACT,MAAD,EAASU,SAAT,IAAsBpB,QAAQ,CAACiB,gBAAD,CAApC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIT,QAAJ,EAAc;AACZQ,MAAAA,SAAS,CAAEE,SAAD,IAAe,CAACA,SAAjB,CAAT;AACD,KAFD,MAEO;AACLN,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAI,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GAPD;;AASA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEC,WAApB;AAAiC,MAAA,SAAS,EAAEF,SAA5C;AAAA,iBACGJ,IADH,eAEE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEH,QAArB;AAAA,kBAAgCE;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGJ,MAAM,gBAAG,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAyB,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAHlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,gBAAD;AACE,MAAA,MAAM,EAAEA,MADV;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,SAAS,EAAEb,KAAK,CAACwB,QAAN,CAAeC,KAAf,CAAqBN,QAArB,IAAiChB,iBAH9C;AAAA,gBAKGgB;AALH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApCD;;GAAML,S;;MAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { MENU_ENTRY_HEIGHT } from \"./config\";\nimport { MenuEntry, LinkLabel } from \"./MenuEntry\";\nimport { PushedProps } from \"./types\";\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from \"../../components/Svg\";\n\ninterface Props extends PushedProps {\n  label: string;\n  icon: React.ReactElement;\n  initialOpenState?: boolean;\n  className?: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  // Safari fix\n  flex-shrink: 0;\n`;\n\nconst AccordionContent = styled.div<{ isOpen: boolean; isPushed: boolean; maxHeight: number }>`\n  max-height: ${({ isOpen, maxHeight }) => (isOpen ? `${maxHeight}px` : 0)};\n  transition: max-height 0.3s ease-out;\n  overflow: hidden;\n  border-color: ${({ isOpen, isPushed }) => (isOpen && isPushed ? \"rgba(133, 133, 133, 0.1)\" : \"transparent\")};\n  border-style: solid;\n  border-width: 1px;\n`;\n\nconst Accordion: React.FC<Props> = ({\n  label,\n  icon,\n  isPushed,\n  pushNav,\n  initialOpenState = false,\n  children,\n  className,\n}) => {\n  const [isOpen, setIsOpen] = useState(initialOpenState);\n\n  const handleClick = () => {\n    if (isPushed) {\n      setIsOpen((prevState) => !prevState);\n    } else {\n      pushNav(true);\n      setIsOpen(true);\n    }\n  };\n\n  return (\n    <Container>\n      <MenuEntry onClick={handleClick} className={className}>\n        {icon}\n        <LinkLabel isPushed={isPushed}>{label}</LinkLabel>\n        {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n      </MenuEntry>\n      <AccordionContent\n        isOpen={isOpen}\n        isPushed={isPushed}\n        maxHeight={React.Children.count(children) * MENU_ENTRY_HEIGHT}\n      >\n        {children}\n      </AccordionContent>\n    </Container>\n  );\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"module"}