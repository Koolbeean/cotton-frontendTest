{"ast":null,"code":"import styled, { css, keyframes } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst spinStyle = css`\n  animation: ${rotate} 2s linear infinite;\n`;\nconst Svg = styled.svg`\n  fill: ${({\n  theme,\n  color\n}) => getThemeValue(`colors.${color}`, color)(theme)};\n  flex-shrink: 0;\n\n  ${({\n  spin\n}) => spin && spinStyle}\n  ${space}\n`;\nSvg.defaultProps = {\n  color: \"text\",\n  width: \"20px\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  spin: false\n};\nexport default Svg;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/components/Svg/Svg.tsx"],"names":["styled","css","keyframes","space","getThemeValue","rotate","spinStyle","Svg","svg","theme","color","spin","defaultProps","width","xmlns"],"mappings":"AAAA,OAAOA,MAAP,IAAiBC,GAAjB,EAAsBC,SAAtB,QAAuC,mBAAvC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAGA,MAAMC,MAAM,GAAGH,SAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMI,SAAS,GAAGL,GAAI;AACtB,eAAeI,MAAO;AACtB,CAFA;AAIA,MAAME,GAAG,GAAGP,MAAM,CAACQ,GAAc;AACjC,UAAU,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAsBN,aAAa,CAAE,UAASM,KAAM,EAAjB,EAAoBA,KAApB,CAAb,CAAwCD,KAAxC,CAA+C;AAC/E;AACA;AACA,IAAI,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAcA,IAAI,IAAIL,SAAU;AACpC,IAAIH,KAAM;AACV,CANA;AAQAI,GAAG,CAACK,YAAJ,GAAmB;AACjBF,EAAAA,KAAK,EAAE,MADU;AAEjBG,EAAAA,KAAK,EAAE,MAFU;AAGjBC,EAAAA,KAAK,EAAE,4BAHU;AAIjBH,EAAAA,IAAI,EAAE;AAJW,CAAnB;AAOA,eAAeJ,GAAf","sourcesContent":["import styled, { css, keyframes } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { SvgProps } from \"./types\";\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst spinStyle = css`\n  animation: ${rotate} 2s linear infinite;\n`;\n\nconst Svg = styled.svg<SvgProps>`\n  fill: ${({ theme, color }) => getThemeValue(`colors.${color}`, color)(theme)};\n  flex-shrink: 0;\n\n  ${({ spin }) => spin && spinStyle}\n  ${space}\n`;\n\nSvg.defaultProps = {\n  color: \"text\",\n  width: \"20px\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  spin: false,\n};\n\nexport default Svg;\n"]},"metadata":{},"sourceType":"module"}