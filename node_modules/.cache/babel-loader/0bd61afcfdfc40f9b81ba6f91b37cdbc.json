{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\uikit\\\\components\\\\Alert\\\\Alert.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport CheckmarkCircleIcon from \"../Svg/Icons/CheckmarkCircle\";\nimport ErrorIcon from \"../Svg/Icons/Error\";\nimport BlockIcon from \"../Svg/Icons/Block\";\nimport InfoIcon from \"../Svg/Icons/Info\";\nimport { Text } from \"../Text\";\nimport { IconButton } from \"../Button\";\nimport { CloseIcon } from \"../Svg\";\nimport { Flex } from \"../Flex\";\nimport { variants } from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getThemeColor = ({\n  theme,\n  variant = variants.INFO\n}) => {\n  switch (variant) {\n    case variants.DANGER:\n      return theme.colors.failure;\n\n    case variants.WARNING:\n      return theme.colors.warning;\n\n    case variants.SUCCESS:\n      return theme.colors.success;\n\n    case variants.INFO:\n    default:\n      return theme.colors.secondary;\n  }\n};\n\nconst getIcon = (variant = variants.INFO) => {\n  switch (variant) {\n    case variants.DANGER:\n      return BlockIcon;\n\n    case variants.WARNING:\n      return ErrorIcon;\n\n    case variants.SUCCESS:\n      return CheckmarkCircleIcon;\n\n    case variants.INFO:\n    default:\n      return InfoIcon;\n  }\n};\n\nconst IconLabel = styled.div`\n  background-color: ${getThemeColor};\n  border-radius: 16px 0 0 16px;\n  color: ${({\n  theme\n}) => theme.alert.background};\n  padding: 12px;\n`;\n_c = IconLabel;\nconst withHandlerSpacing = 32 + 12 + 8; // button size + inner spacing + handler position\n\nconst Details = styled.div`\n  flex: 1;\n  padding-bottom: 12px;\n  padding-left: 12px;\n  padding-right: ${({\n  hasHandler\n}) => hasHandler ? `${withHandlerSpacing}px` : \"12px\"};\n  padding-top: 12px;\n`;\n_c2 = Details;\nconst CloseHandler = styled.div`\n  border-radius: 0 16px 16px 0;\n  right: 8px;\n  position: absolute;\n  top: 8px;\n`;\n_c3 = CloseHandler;\nconst StyledAlert = styled(Flex)`\n  position: relative;\n  background-color: ${({\n  theme\n}) => theme.alert.background};\n  border-radius: 16px;\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\n`;\n_c4 = StyledAlert;\n\nconst Alert = ({\n  title,\n  children,\n  variant,\n  onClick\n}) => {\n  const Icon = getIcon(variant);\n  return /*#__PURE__*/_jsxDEV(StyledAlert, {\n    children: [/*#__PURE__*/_jsxDEV(IconLabel, {\n      variant: variant,\n      hasDescription: !!children,\n      children: /*#__PURE__*/_jsxDEV(Icon, {\n        color: \"currentColor\",\n        width: \"24px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Details, {\n      hasHandler: !!onClick,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        bold: true,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), typeof children === \"string\" ? /*#__PURE__*/_jsxDEV(Text, {\n        as: \"p\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }, this) : children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), onClick && /*#__PURE__*/_jsxDEV(CloseHandler, {\n      children: /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"sm\",\n        variant: \"text\",\n        onClick: onClick,\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n          width: \"24px\",\n          color: \"currentColor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Alert;\nexport default Alert;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"IconLabel\");\n$RefreshReg$(_c2, \"Details\");\n$RefreshReg$(_c3, \"CloseHandler\");\n$RefreshReg$(_c4, \"StyledAlert\");\n$RefreshReg$(_c5, \"Alert\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/components/Alert/Alert.tsx"],"names":["React","styled","CheckmarkCircleIcon","ErrorIcon","BlockIcon","InfoIcon","Text","IconButton","CloseIcon","Flex","variants","getThemeColor","theme","variant","INFO","DANGER","colors","failure","WARNING","warning","SUCCESS","success","secondary","getIcon","IconLabel","div","alert","background","withHandlerSpacing","Details","hasHandler","CloseHandler","StyledAlert","Alert","title","children","onClick","Icon"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled, { DefaultTheme } from \"styled-components\";\nimport CheckmarkCircleIcon from \"../Svg/Icons/CheckmarkCircle\";\nimport ErrorIcon from \"../Svg/Icons/Error\";\nimport BlockIcon from \"../Svg/Icons/Block\";\nimport InfoIcon from \"../Svg/Icons/Info\";\nimport { Text } from \"../Text\";\nimport { IconButton } from \"../Button\";\nimport { CloseIcon } from \"../Svg\";\nimport { Flex } from \"../Flex\";\nimport { AlertProps, variants } from \"./types\";\n\ninterface ThemedIconLabel {\n  variant: AlertProps[\"variant\"];\n  theme: DefaultTheme;\n  hasDescription: boolean;\n}\n\nconst getThemeColor = ({ theme, variant = variants.INFO }: ThemedIconLabel) => {\n  switch (variant) {\n    case variants.DANGER:\n      return theme.colors.failure;\n    case variants.WARNING:\n      return theme.colors.warning;\n    case variants.SUCCESS:\n      return theme.colors.success;\n    case variants.INFO:\n    default:\n      return theme.colors.secondary;\n  }\n};\n\nconst getIcon = (variant: AlertProps[\"variant\"] = variants.INFO) => {\n  switch (variant) {\n    case variants.DANGER:\n      return BlockIcon;\n    case variants.WARNING:\n      return ErrorIcon;\n    case variants.SUCCESS:\n      return CheckmarkCircleIcon;\n    case variants.INFO:\n    default:\n      return InfoIcon;\n  }\n};\n\nconst IconLabel = styled.div<ThemedIconLabel>`\n  background-color: ${getThemeColor};\n  border-radius: 16px 0 0 16px;\n  color: ${({ theme }) => theme.alert.background};\n  padding: 12px;\n`;\n\nconst withHandlerSpacing = 32 + 12 + 8; // button size + inner spacing + handler position\nconst Details = styled.div<{ hasHandler: boolean }>`\n  flex: 1;\n  padding-bottom: 12px;\n  padding-left: 12px;\n  padding-right: ${({ hasHandler }) => (hasHandler ? `${withHandlerSpacing}px` : \"12px\")};\n  padding-top: 12px;\n`;\n\nconst CloseHandler = styled.div`\n  border-radius: 0 16px 16px 0;\n  right: 8px;\n  position: absolute;\n  top: 8px;\n`;\n\nconst StyledAlert = styled(Flex)`\n  position: relative;\n  background-color: ${({ theme }) => theme.alert.background};\n  border-radius: 16px;\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\n`;\n\nconst Alert: React.FC<AlertProps> = ({ title, children, variant, onClick }) => {\n  const Icon = getIcon(variant);\n\n  return (\n    <StyledAlert>\n      <IconLabel variant={variant} hasDescription={!!children}>\n        <Icon color=\"currentColor\" width=\"24px\" />\n      </IconLabel>\n      <Details hasHandler={!!onClick}>\n        <Text bold>{title}</Text>\n        {typeof children === \"string\" ? <Text as=\"p\">{children}</Text> : children}\n      </Details>\n      {onClick && (\n        <CloseHandler>\n          <IconButton size=\"sm\" variant=\"text\" onClick={onClick}>\n            <CloseIcon width=\"24px\" color=\"currentColor\" />\n          </IconButton>\n        </CloseHandler>\n      )}\n    </StyledAlert>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}