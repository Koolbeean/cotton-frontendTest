{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from\"styled-components\";import{space}from\"styled-system\";import getThemeValue from\"../../util/getThemeValue\";var getColor=function getColor(_ref){var color=_ref.color,theme=_ref.theme;return getThemeValue(\"colors.\".concat(color),color)(theme);};var getFontSize=function getFontSize(_ref2){var fontSize=_ref2.fontSize,small=_ref2.small;return small?\"14px\":fontSize||\"16px\";};var Text=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: \",\";\\n  font-size: \",\";\\n  font-weight: \",\";\\n  line-height: 1.5;\\n  \",\"\\n  \",\"\\n\"])),getColor,getFontSize,function(_ref3){var bold=_ref3.bold;return bold?600:400;},function(_ref4){var textTransform=_ref4.textTransform;return textTransform&&\"text-transform: \".concat(textTransform,\";\");},space);Text.defaultProps={color:\"text\",small:false};export default Text;","map":{"version":3,"sources":["C:/Users/yupoh/Desktop/cotton-frontend/src/uikit/components/Text/Text.tsx"],"names":["styled","space","getThemeValue","getColor","color","theme","getFontSize","fontSize","small","Text","div","bold","textTransform","defaultProps"],"mappings":"iMAAA,MAAOA,CAAAA,MAAP,KAAqC,mBAArC,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0BAA1B,CAOA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAmC,IAAhCC,CAAAA,KAAgC,MAAhCA,KAAgC,CAAzBC,KAAyB,MAAzBA,KAAyB,CAClD,MAAOH,CAAAA,aAAa,kBAAWE,KAAX,EAAoBA,KAApB,CAAb,CAAwCC,KAAxC,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,OAAoC,IAAjCC,CAAAA,QAAiC,OAAjCA,QAAiC,CAAvBC,KAAuB,OAAvBA,KAAuB,CACtD,MAAOA,CAAAA,KAAK,CAAG,MAAH,CAAYD,QAAQ,EAAI,MAApC,CACD,CAFD,CAIA,GAAME,CAAAA,IAAI,CAAGT,MAAM,CAACU,GAAV,6JACCP,QADD,CAEKG,WAFL,CAGO,mBAAGK,CAAAA,IAAH,OAAGA,IAAH,OAAeA,CAAAA,IAAI,CAAG,GAAH,CAAS,GAA5B,EAHP,CAKN,mBAAGC,CAAAA,aAAH,OAAGA,aAAH,OAAuBA,CAAAA,aAAa,4BAAuBA,aAAvB,KAApC,EALM,CAMNX,KANM,CAAV,CASAQ,IAAI,CAACI,YAAL,CAAoB,CAClBT,KAAK,CAAE,MADW,CAElBI,KAAK,CAAE,KAFW,CAApB,CAKA,cAAeC,CAAAA,IAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport { space } from \"styled-system\";\r\nimport getThemeValue from \"../../util/getThemeValue\";\r\nimport { TextProps } from \"./types\";\r\n\r\ninterface ThemedProps extends TextProps {\r\n  theme: DefaultTheme;\r\n}\r\n\r\nconst getColor = ({ color, theme }: ThemedProps) => {\r\n  return getThemeValue(`colors.${color}`, color)(theme);\r\n};\r\n\r\nconst getFontSize = ({ fontSize, small }: TextProps) => {\r\n  return small ? \"14px\" : fontSize || \"16px\";\r\n};\r\n\r\nconst Text = styled.div<TextProps>`\r\n  color: ${getColor};\r\n  font-size: ${getFontSize};\r\n  font-weight: ${({ bold }) => (bold ? 600 : 400)};\r\n  line-height: 1.5;\r\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\r\n  ${space}\r\n`;\r\n\r\nText.defaultProps = {\r\n  color: \"text\",\r\n  small: false,\r\n};\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}