{"ast":null,"code":"import styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { variants } from \"./types\";\n\nconst getDisabledStyles = ({\n  isLoading,\n  theme\n}) => {\n  if (isLoading === true) {\n    return `\n      &:disabled,\n      &.button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n\nconst removePointerEvents = ({\n  disabled,\n  as\n}) => {\n  if (disabled && as && as !== \"button\") {\n    return `\n      pointer-events: none;\n    `;\n  }\n\n  return \"\";\n};\n\nconst getButtonVariantProp = prop => ({\n  theme,\n  variant = variants.PRIMARY\n}) => {\n  return theme.button[variant][prop];\n};\n\nconst StyledButton = styled.button`\n  align-items: center;\n  background-color: ${getButtonVariantProp(\"background\")};\n  border: ${getButtonVariantProp(\"border\")};\n  border-radius: 16px;\n  box-shadow: ${getButtonVariantProp(\"boxShadow\")};\n  color: ${getButtonVariantProp(\"color\")};\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  /* max-content instead of auto for Safari fix */\n  width: ${({\n  fullWidth\n}) => fullWidth ? \"100%\" : \"max-content\"};\n  height: ${({\n  size\n}) => size === \"sm\" ? \"32px\" : \"48px\"};\n  line-height: 1;\n  letter-spacing: 0.03em;\n  justify-content: center;\n  outline: 0;\n  padding: ${({\n  size\n}) => size === \"sm\" ? \"0 16px\" : \"0 24px\"};\n  transition: background-color 0.2s;\n  opacity: ${({\n  isLoading\n}) => isLoading ? 0.5 : 1};\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    background-color: ${getButtonVariantProp(\"backgroundHover\")};\n    border-color: ${getButtonVariantProp(\"borderColorHover\")};\n  }\n\n  &:focus:not(:active) {\n    box-shadow: 0 0 0 2px ${({\n  theme\n}) => theme.colors.secondary};\n  }\n\n  &:active {\n    background-color: ${getButtonVariantProp(\"backgroundActive\")};\n    box-shadow: ${getButtonVariantProp(\"boxShadowActive\")};\n  }\n\n  ${getDisabledStyles}\n  ${removePointerEvents}\n  ${space}\n`;\nStyledButton.defaultProps = {\n  fullWidth: false,\n  type: \"button\"\n};\nexport default StyledButton;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/components/Button/StyledButton.tsx"],"names":["styled","space","variants","getDisabledStyles","isLoading","theme","colors","backgroundDisabled","textDisabled","removePointerEvents","disabled","as","getButtonVariantProp","prop","variant","PRIMARY","button","StyledButton","fullWidth","size","secondary","defaultProps","type"],"mappings":"AAAA,OAAOA,MAAP,MAAqC,mBAArC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAA0CC,QAA1C,QAA0D,SAA1D;;AAMA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAAuC;AAC/D,MAAID,SAAS,KAAK,IAAlB,EAAwB;AACtB,WAAQ;AACZ;AACA;AACA;AACA;AACA,KALI;AAMD;;AAED,SAAQ;AACV;AACA;AACA,0BAA0BC,KAAK,CAACC,MAAN,CAAaC,kBAAmB;AAC1D,sBAAsBF,KAAK,CAACC,MAAN,CAAaC,kBAAmB;AACtD;AACA,eAAeF,KAAK,CAACC,MAAN,CAAaE,YAAa;AACzC;AACA;AACA,GATE;AAUD,CApBD;;AAsBA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAmC;AAC7D,MAAID,QAAQ,IAAIC,EAAZ,IAAkBA,EAAE,KAAK,QAA7B,EAAuC;AACrC,WAAQ;AACZ;AACA,KAFI;AAGD;;AAED,SAAO,EAAP;AACD,CARD;;AAUA,MAAMC,oBAAoB,GAAIC,IAAD,IAAoC,CAAC;AAChER,EAAAA,KADgE;AAEhES,EAAAA,OAAO,GAAGZ,QAAQ,CAACa;AAF6C,CAAD,KAG9C;AACjB,SAAOV,KAAK,CAACW,MAAN,CAAaF,OAAb,EAAsBD,IAAtB,CAAP;AACD,CALD;;AAOA,MAAMI,YAAY,GAAGjB,MAAM,CAACgB,MAAoB;AAChD;AACA,sBAAsBJ,oBAAoB,CAAC,YAAD,CAAe;AACzD,YAAYA,oBAAoB,CAAC,QAAD,CAAW;AAC3C;AACA,gBAAgBA,oBAAoB,CAAC,WAAD,CAAc;AAClD,WAAWA,oBAAoB,CAAC,OAAD,CAAU;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,MAAH,GAAY,aAAe;AACnE,YAAY,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAeA,IAAI,KAAK,IAAT,GAAgB,MAAhB,GAAyB,MAAQ;AAC5D;AACA;AACA;AACA;AACA,aAAa,CAAC;AAAEA,EAAAA;AAAF,CAAD,KAAeA,IAAI,KAAK,IAAT,GAAgB,QAAhB,GAA2B,QAAU;AACjE;AACA,aAAa,CAAC;AAAEf,EAAAA;AAAF,CAAD,KAAoBA,SAAS,GAAG,GAAH,GAAS,CAAG;AACtD;AACA;AACA,wBAAwBQ,oBAAoB,CAAC,iBAAD,CAAoB;AAChE,oBAAoBA,oBAAoB,CAAC,kBAAD,CAAqB;AAC7D;AACA;AACA;AACA,4BAA4B,CAAC;AAAEP,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAac,SAAU;AAClE;AACA;AACA;AACA,wBAAwBR,oBAAoB,CAAC,kBAAD,CAAqB;AACjE,kBAAkBA,oBAAoB,CAAC,iBAAD,CAAoB;AAC1D;AACA;AACA,IAAIT,iBAAkB;AACtB,IAAIM,mBAAoB;AACxB,IAAIR,KAAM;AACV,CAxCA;AA0CAgB,YAAY,CAACI,YAAb,GAA4B;AAC1BH,EAAAA,SAAS,EAAE,KADe;AAE1BI,EAAAA,IAAI,EAAE;AAFoB,CAA5B;AAKA,eAAeL,YAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport { ButtonProps, ButtonThemeVariant, variants } from \"./types\";\n\ntype ThemedProps = {\n  theme: DefaultTheme;\n} & ButtonProps;\n\nconst getDisabledStyles = ({ isLoading, theme }: ThemedProps) => {\n  if (isLoading === true) {\n    return `\n      &:disabled,\n      &.button--disabled {\n        cursor: not-allowed;\n      }\n    `;\n  }\n\n  return `\n    &:disabled,\n    &.button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `;\n};\n\nconst removePointerEvents = ({ disabled, as }: ThemedProps) => {\n  if (disabled && as && as !== \"button\") {\n    return `\n      pointer-events: none;\n    `;\n  }\n\n  return \"\";\n};\n\nconst getButtonVariantProp = (prop: keyof ButtonThemeVariant) => ({\n  theme,\n  variant = variants.PRIMARY,\n}: ThemedProps) => {\n  return theme.button[variant][prop];\n};\n\nconst StyledButton = styled.button<ButtonProps>`\n  align-items: center;\n  background-color: ${getButtonVariantProp(\"background\")};\n  border: ${getButtonVariantProp(\"border\")};\n  border-radius: 16px;\n  box-shadow: ${getButtonVariantProp(\"boxShadow\")};\n  color: ${getButtonVariantProp(\"color\")};\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  /* max-content instead of auto for Safari fix */\n  width: ${({ fullWidth }) => (fullWidth ? \"100%\" : \"max-content\")};\n  height: ${({ size }) => (size === \"sm\" ? \"32px\" : \"48px\")};\n  line-height: 1;\n  letter-spacing: 0.03em;\n  justify-content: center;\n  outline: 0;\n  padding: ${({ size }) => (size === \"sm\" ? \"0 16px\" : \"0 24px\")};\n  transition: background-color 0.2s;\n  opacity: ${({ isLoading }) => (isLoading ? 0.5 : 1)};\n\n  &:hover:not(:disabled):not(.button--disabled):not(:active) {\n    background-color: ${getButtonVariantProp(\"backgroundHover\")};\n    border-color: ${getButtonVariantProp(\"borderColorHover\")};\n  }\n\n  &:focus:not(:active) {\n    box-shadow: 0 0 0 2px ${({ theme }) => theme.colors.secondary};\n  }\n\n  &:active {\n    background-color: ${getButtonVariantProp(\"backgroundActive\")};\n    box-shadow: ${getButtonVariantProp(\"boxShadowActive\")};\n  }\n\n  ${getDisabledStyles}\n  ${removePointerEvents}\n  ${space}\n`;\n\nStyledButton.defaultProps = {\n  fullWidth: false,\n  type: \"button\",\n};\n\nexport default StyledButton;\n"]},"metadata":{},"sourceType":"module"}