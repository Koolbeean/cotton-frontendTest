{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\uikit\\\\components\\\\Image\\\\BackgroundImage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport observerOptions from \"./options\";\nimport Wrapper from \"./Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BackgroundImage = ({\n  src,\n  ...otherProps\n}) => {\n  _s();\n\n  const imgRef = useRef(null);\n  useEffect(() => {\n    const img = imgRef.current;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        const {\n          isIntersecting\n        } = entry;\n\n        if (isIntersecting) {\n          img.style.backgroundImage = `url(\"${src}\")`;\n          observer.disconnect();\n        }\n      });\n    }, observerOptions);\n    observer.observe(img);\n    return () => {\n      observer.disconnect();\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    ref: imgRef,\n    ...otherProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_s(BackgroundImage, \"yH8mEGw9zDQgg3u40vY4RuXceis=\");\n\n_c = BackgroundImage;\nexport default BackgroundImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BackgroundImage\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/components/Image/BackgroundImage.tsx"],"names":["React","useEffect","useRef","observerOptions","Wrapper","BackgroundImage","src","otherProps","imgRef","img","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","style","backgroundImage","disconnect","observe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAGA,MAAMC,eAAqC,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAO,KAAGC;AAAV,CAAD,KAA4B;AAAA;;AACxE,QAAMC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAArB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,GAAG,GAAID,MAAM,CAACE,OAApB;AACA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;AACrDA,MAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACzB,cAAM;AAAEC,UAAAA;AAAF,YAAqBD,KAA3B;;AACA,YAAIC,cAAJ,EAAoB;AAClBP,UAAAA,GAAG,CAACQ,KAAJ,CAAUC,eAAV,GAA6B,QAAOZ,GAAI,IAAxC;AACAK,UAAAA,QAAQ,CAACQ,UAAT;AACD;AACF,OAND;AAOD,KARgB,EAQdhB,eARc,CAAjB;AASAQ,IAAAA,QAAQ,CAACS,OAAT,CAAiBX,GAAjB;AAEA,WAAO,MAAM;AACXE,MAAAA,QAAQ,CAACQ,UAAT;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACb,GAAD,CAhBM,CAAT;AAkBA,sBAAO,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEE,MAAd;AAAA,OAA0BD;AAA1B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAtBD;;GAAMF,e;;KAAAA,e;AAwBN,eAAeA,eAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport observerOptions from \"./options\";\nimport Wrapper from \"./Wrapper\";\nimport { ImageProps } from \"./types\";\n\nconst BackgroundImage: React.FC<ImageProps> = ({ src, ...otherProps }) => {\n  const imgRef = useRef(null);\n\n  useEffect(() => {\n    const img = (imgRef.current as unknown) as HTMLElement;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        const { isIntersecting } = entry;\n        if (isIntersecting) {\n          img.style.backgroundImage = `url(\"${src}\")`;\n          observer.disconnect();\n        }\n      });\n    }, observerOptions);\n    observer.observe(img);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [src]);\n\n  return <Wrapper ref={imgRef} {...otherProps} />;\n};\n\nexport default BackgroundImage;\n"]},"metadata":{},"sourceType":"module"}