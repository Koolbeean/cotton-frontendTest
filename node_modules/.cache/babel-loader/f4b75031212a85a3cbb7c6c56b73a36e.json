{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\views\\\\Farms\\\\Farms.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { Heading } from 'uikit';\nimport { BLOCKS_PER_YEAR } from 'config';\nimport FlexLayout from 'components/layout/Flex';\nimport Page from 'components/layout/Page';\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks';\nimport useRefresh from 'hooks/useRefresh';\nimport { fetchFarmUserDataAsync } from 'state/actions';\nimport { QuoteToken } from 'config/constants/types';\nimport useI18n from 'hooks/useI18n';\nimport FarmCard from './components/FarmCard/FarmCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Hero = styled.div`\n  align-items: center;\n  opacity: 0.9;\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n  background-image: linear-gradient(180deg, #7f715f 0%, black 100%);\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    height: 165px;\n    padding-top: 0;\n  }\n`;\n_c = Hero;\nconst Header = styled.div`\n  padding: 32px 0px;\n  text-align: center;\n  padding-left: 16px;\n  padding-right: 16px;\n  // background: ${({\n  theme\n}) => theme.colors.gradients.bubblegum};\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`;\n_c2 = Header;\n\nconst Farms = farmsProps => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const TranslateString = useI18n();\n  const farmsLP = useFarms();\n  const cakePrice = usePriceCakeBusd();\n  const bnbPrice = usePriceBnbBusd();\n  const {\n    account,\n    ethereum\n  } = useWallet();\n  const {\n    tokenMode\n  } = farmsProps;\n  const dispatch = useDispatch();\n  const {\n    fastRefresh\n  } = useRefresh();\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account));\n    }\n  }, [account, dispatch, fastRefresh]);\n  const [stakedOnly, setStakedOnly] = useState(false);\n  const activeFarms = farmsLP.filter(farm => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X');\n  const inactiveFarms = farmsLP.filter(farm => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X');\n  const stakedOnlyFarms = activeFarms.filter(farm => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0)); // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n\n  const farmsList = useCallback((farmsToDisplay, removed) => {\n    // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n    const farmsToDisplayWithAPY = farmsToDisplay.map(farm => {\n      // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n      //   return farm\n      // }\n      const cakeRewardPerBlock = new BigNumber(farm.ffdPerBlock || 1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18)); // TO DO\n\n      const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\n      const cakeRewardPerMonth = cakeRewardPerYear.div(12);\n      let apy = cakePrice.times(cakeRewardPerYear);\n      let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        totalValue = totalValue.times(bnbPrice);\n      }\n\n      if (farm.pid === 35) {\n        apy = cakePrice.times(cakeRewardPerMonth).times(10000000000);\n      }\n\n      if (farm.pid === 38) {\n        apy = cakePrice.times(cakeRewardPerMonth).div(80000000);\n      }\n\n      if (totalValue.comparedTo(0) > 0) {\n        apy = apy.div(totalValue);\n      }\n\n      return { ...farm,\n        apy\n      };\n    });\n    return farmsToDisplayWithAPY.map(farm => /*#__PURE__*/_jsxDEV(FarmCard, {\n      farm: farm,\n      removed: removed,\n      bnbPrice: bnbPrice,\n      cakePrice: cakePrice,\n      ethereum: ethereum,\n      account: account\n    }, farm.pid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this));\n  }, [bnbPrice, account, cakePrice, ethereum]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Hero, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        children: [/*#__PURE__*/_jsxDEV(Heading, {\n          as: \"h1\",\n          size: \"xxl\",\n          color: \"secondary\",\n          mb: \"24px\",\n          style: {\n            opacity: '1',\n            color: \"#e0d8d1\"\n          },\n          children: tokenMode ? TranslateString(999, 'FFD Pools') : TranslateString(999, 'Farms')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          size: \"lg\",\n          color: \"text\",\n          style: {\n            opacity: '1000',\n            color: \"white\"\n          },\n          children: tokenMode ? TranslateString(999, 'Stake tokens to earn FFD.') : TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn FFD.')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FlexLayout, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${path}`,\n            children: stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: `${path}/history`,\n            children: farmsList(inactiveFarms, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Farms, \"U7j0Q/3y0k3JMsUX/Kmgi5RmzpA=\", false, function () {\n  return [useRouteMatch, useI18n, useFarms, usePriceCakeBusd, usePriceBnbBusd, useWallet, useDispatch, useRefresh];\n});\n\n_c3 = Farms;\nexport default Farms;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Hero\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Farms\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","styled","Route","useRouteMatch","useDispatch","BigNumber","useWallet","Heading","BLOCKS_PER_YEAR","FlexLayout","Page","useFarms","usePriceBnbBusd","usePriceCakeBusd","useRefresh","fetchFarmUserDataAsync","QuoteToken","useI18n","FarmCard","Hero","div","theme","mediaQueries","lg","Header","colors","gradients","bubblegum","sm","Farms","farmsProps","path","TranslateString","farmsLP","cakePrice","bnbPrice","account","ethereum","tokenMode","dispatch","fastRefresh","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","inactiveFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","farmsList","farmsToDisplay","removed","farmsToDisplayWithAPY","map","cakeRewardPerBlock","ffdPerBlock","times","poolWeight","pow","cakeRewardPerYear","cakeRewardPerMonth","apy","totalValue","lpTotalInQuoteToken","quoteTokenSymbol","BNB","pid","comparedTo","opacity","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { Image, Heading } from 'uikit'\nimport { BLOCKS_PER_YEAR, CAKE_PER_BLOCK, CAKE_POOL_PID } from 'config'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePriceBnbBusd, usePriceCakeBusd } from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport { QuoteToken } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\nimport Divider from './components/Divider'\n\nexport interface FarmsProps {\n  tokenMode?: boolean\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  opacity: 0.9;\n  background-repeat: no-repeat;\n  background-position: top center;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin: auto;\n  margin-bottom: 32px;\n  padding-top: 116px;\n  text-align: center;\n  background-image: linear-gradient(180deg, #7f715f 0%, black 100%);\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    height: 165px;\n    padding-top: 0;\n  }\n`\n\nconst Header = styled.div`\n  padding: 32px 0px;\n  text-align: center;\n  padding-left: 16px;\n  padding-right: 16px;\n  // background: ${({ theme }) => theme.colors.gradients.bubblegum};\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { tokenMode } = farmsProps;\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X')\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X')\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n        const cakeRewardPerBlock = new BigNumber(farm.ffdPerBlock || 1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18)) // TO DO\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR)\n        const cakeRewardPerMonth = cakeRewardPerYear.div(12)\n\n        let apy = cakePrice.times(cakeRewardPerYear);\n\n        let totalValue = new BigNumber(farm.lpTotalInQuoteToken || 0);\n\n        if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n          totalValue = totalValue.times(bnbPrice);\n        }\n\n        if (farm.pid === 35) {\n          apy = cakePrice.times(cakeRewardPerMonth).times(10000000000);\n        }\n\n        if (farm.pid === 38) {\n          apy = cakePrice.times(cakeRewardPerMonth).div(80000000);\n        }\n\n        if (totalValue.comparedTo(0) > 0) {\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [bnbPrice, account, cakePrice, ethereum],\n  )\n\n  return (\n    <>\n    <Hero>\n      <Header>\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\" style={{ opacity: '1', color: \"#e0d8d1\" }}>\n        {tokenMode ? TranslateString(999, 'FFD Pools') : TranslateString(999, 'Farms')}\n        </Heading>\n        <Heading size=\"lg\" color=\"text\" style={{ opacity: '1000', color: \"white\" }}>\n        {tokenMode ? TranslateString(999, 'Stake tokens to earn FFD.') : TranslateString(999, 'Stake Liquidity Pool (LP) tokens to earn FFD.')}\n        </Heading>\n      </Header>\n      </Hero>\n      <Page>\n\n        <div>\n          <FlexLayout>\n            <Route exact path={`${path}`}>\n              {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n            </Route>\n            <Route exact path={`${path}/history`}>\n              {farmsList(inactiveFarms, true)}\n            </Route>\n          </FlexLayout>\n        </div>\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}