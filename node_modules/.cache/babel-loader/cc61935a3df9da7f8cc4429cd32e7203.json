{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\uikit\\\\components\\\\Image\\\\Image.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport observerOptions from \"./options\";\nimport Wrapper from \"./Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledImage = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n`;\n_c = StyledImage;\nconst Placeholder = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n_c2 = Placeholder;\n\nconst Image = ({\n  src,\n  alt,\n  ...otherProps\n}) => {\n  _s();\n\n  const imgRef = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const img = imgRef.current;\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        const {\n          isIntersecting\n        } = entry;\n\n        if (isIntersecting) {\n          setIsLoaded(true);\n          observer.disconnect();\n        }\n      });\n    }, observerOptions);\n    observer.observe(img);\n    return () => {\n      observer.disconnect();\n    };\n  }, [src]);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    ref: imgRef,\n    ...otherProps,\n    children: isLoaded ? /*#__PURE__*/_jsxDEV(StyledImage, {\n      src: src,\n      alt: alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(Placeholder, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 57\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Image, \"zxhXzMCvPpw79Y0yuQUUXMF+7SI=\");\n\n_c3 = Image;\nexport default Image;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledImage\");\n$RefreshReg$(_c2, \"Placeholder\");\n$RefreshReg$(_c3, \"Image\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/components/Image/Image.tsx"],"names":["React","useEffect","useRef","useState","styled","observerOptions","Wrapper","StyledImage","img","Placeholder","div","Image","src","alt","otherProps","imgRef","isLoaded","setIsLoaded","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","disconnect","observe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,MAAMC,WAAW,GAAGH,MAAM,CAACI,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMD,W;AASN,MAAME,WAAW,GAAGL,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,W;;AAQN,MAAME,KAA2B,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,GAAP;AAAY,KAAGC;AAAf,CAAD,KAAiC;AAAA;;AACnE,QAAMC,MAAM,GAAGb,MAAM,CAAC,IAAD,CAArB;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,KAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,GAAG,GAAIO,MAAM,CAACG,OAApB;AACA,UAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;AACrDA,MAAAA,OAAO,CAACC,OAAR,CAAiBC,KAAD,IAAW;AACzB,cAAM;AAAEC,UAAAA;AAAF,YAAqBD,KAA3B;;AACA,YAAIC,cAAJ,EAAoB;AAClBP,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,UAAAA,QAAQ,CAACM,UAAT;AACD;AACF,OAND;AAOD,KARgB,EAQdpB,eARc,CAAjB;AASAc,IAAAA,QAAQ,CAACO,OAAT,CAAiBlB,GAAjB;AAEA,WAAO,MAAM;AACXW,MAAAA,QAAQ,CAACM,UAAT;AACD,KAFD;AAGD,GAhBQ,EAgBN,CAACb,GAAD,CAhBM,CAAT;AAkBA,sBACE,QAAC,OAAD;AAAS,IAAA,GAAG,EAAEG,MAAd;AAAA,OAA0BD,UAA1B;AAAA,cACGE,QAAQ,gBAAG,QAAC,WAAD;AAAa,MAAA,GAAG,EAAEJ,GAAlB;AAAuB,MAAA,GAAG,EAAEC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAyC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADpD;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA3BD;;GAAMF,K;;MAAAA,K;AA6BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport observerOptions from \"./options\";\nimport Wrapper from \"./Wrapper\";\nimport { ImageProps } from \"./types\";\n\nconst StyledImage = styled.img`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  max-width: 100%;\n`;\n\nconst Placeholder = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Image: React.FC<ImageProps> = ({ src, alt, ...otherProps }) => {\n  const imgRef = useRef(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const img = (imgRef.current as unknown) as HTMLImageElement;\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        const { isIntersecting } = entry;\n        if (isIntersecting) {\n          setIsLoaded(true);\n          observer.disconnect();\n        }\n      });\n    }, observerOptions);\n    observer.observe(img);\n\n    return () => {\n      observer.disconnect();\n    };\n  }, [src]);\n\n  return (\n    <Wrapper ref={imgRef} {...otherProps}>\n      {isLoaded ? <StyledImage src={src} alt={alt} /> : <Placeholder />}\n    </Wrapper>\n  );\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}