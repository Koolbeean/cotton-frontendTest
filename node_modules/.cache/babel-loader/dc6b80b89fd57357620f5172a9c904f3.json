{"ast":null,"code":"import _objectSpread from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useEffect,useRef}from\"react\";import observerOptions from\"./options\";import Wrapper from\"./Wrapper\";import{jsx as _jsx}from\"react/jsx-runtime\";var BackgroundImage=function BackgroundImage(_ref){var src=_ref.src,otherProps=_objectWithoutProperties(_ref,[\"src\"]);var imgRef=useRef(null);useEffect(function(){var img=imgRef.current;var observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){var isIntersecting=entry.isIntersecting;if(isIntersecting){img.style.backgroundImage=\"url(\\\"\".concat(src,\"\\\")\");observer.disconnect();}});},observerOptions);observer.observe(img);return function(){observer.disconnect();};},[src]);return/*#__PURE__*/_jsx(Wrapper,_objectSpread({ref:imgRef},otherProps));};export default BackgroundImage;","map":{"version":3,"sources":["C:/Users/yupoh/Desktop/cotton-frontend/src/uikit/components/Image/BackgroundImage.tsx"],"names":["React","useEffect","useRef","observerOptions","Wrapper","BackgroundImage","src","otherProps","imgRef","img","current","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","style","backgroundImage","disconnect","observe"],"mappings":"6UAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,eAAP,KAA4B,WAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,C,2CAGA,GAAMC,CAAAA,eAAqC,CAAG,QAAxCA,CAAAA,eAAwC,MAA4B,IAAzBC,CAAAA,GAAyB,MAAzBA,GAAyB,CAAjBC,UAAiB,wCACxE,GAAMC,CAAAA,MAAM,CAAGN,MAAM,CAAC,IAAD,CAArB,CAEAD,SAAS,CAAC,UAAM,CACd,GAAMQ,CAAAA,GAAG,CAAID,MAAM,CAACE,OAApB,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAIC,CAAAA,oBAAJ,CAAyB,SAACC,OAAD,CAAa,CACrDA,OAAO,CAACC,OAAR,CAAgB,SAACC,KAAD,CAAW,CACzB,GAAQC,CAAAA,cAAR,CAA2BD,KAA3B,CAAQC,cAAR,CACA,GAAIA,cAAJ,CAAoB,CAClBP,GAAG,CAACQ,KAAJ,CAAUC,eAAV,iBAAoCZ,GAApC,QACAK,QAAQ,CAACQ,UAAT,GACD,CACF,CAND,EAOD,CARgB,CAQdhB,eARc,CAAjB,CASAQ,QAAQ,CAACS,OAAT,CAAiBX,GAAjB,EAEA,MAAO,WAAM,CACXE,QAAQ,CAACQ,UAAT,GACD,CAFD,CAGD,CAhBQ,CAgBN,CAACb,GAAD,CAhBM,CAAT,CAkBA,mBAAO,KAAC,OAAD,gBAAS,GAAG,CAAEE,MAAd,EAA0BD,UAA1B,EAAP,CACD,CAtBD,CAwBA,cAAeF,CAAAA,eAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport observerOptions from \"./options\";\r\nimport Wrapper from \"./Wrapper\";\r\nimport { ImageProps } from \"./types\";\r\n\r\nconst BackgroundImage: React.FC<ImageProps> = ({ src, ...otherProps }) => {\r\n  const imgRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const img = (imgRef.current as unknown) as HTMLElement;\r\n    const observer = new IntersectionObserver((entries) => {\r\n      entries.forEach((entry) => {\r\n        const { isIntersecting } = entry;\r\n        if (isIntersecting) {\r\n          img.style.backgroundImage = `url(\"${src}\")`;\r\n          observer.disconnect();\r\n        }\r\n      });\r\n    }, observerOptions);\r\n    observer.observe(img);\r\n\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, [src]);\r\n\r\n  return <Wrapper ref={imgRef} {...otherProps} />;\r\n};\r\n\r\nexport default BackgroundImage;\r\n"]},"metadata":{},"sourceType":"module"}