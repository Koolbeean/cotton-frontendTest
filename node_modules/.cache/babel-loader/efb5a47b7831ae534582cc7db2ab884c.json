{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import styled from\"styled-components\";import getColor from\"../../util/getColor\";var getThemeTextColor=function getThemeTextColor(_ref){var outline=_ref.outline,_ref$variant=_ref.variant,variant=_ref$variant===void 0?\"primary\":_ref$variant,theme=_ref.theme;return outline?getColor(variant,theme):\"#ffffff\";};export var StyledTag=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  background-color: \",\";\\n  border: 2px solid \",\";\\n  border-radius: 16px;\\n  color: \",\";\\n  display: inline-flex;\\n  font-size: 14px;\\n  font-weight: 400;\\n  height: 28px;\\n  line-height: 1.5;\\n  padding: 0 8px;\\n  white-space: nowrap;\\n\\n  svg {\\n    fill: \",\";\\n  }\\n\"])),function(_ref2){var outline=_ref2.outline,theme=_ref2.theme,_ref2$variant=_ref2.variant,variant=_ref2$variant===void 0?\"primary\":_ref2$variant;return outline?\"transparent\":getColor(variant,theme);},function(_ref3){var _ref3$variant=_ref3.variant,variant=_ref3$variant===void 0?\"primary\":_ref3$variant,theme=_ref3.theme;return getColor(variant,theme);},getThemeTextColor,getThemeTextColor);export default null;","map":{"version":3,"sources":["C:/Users/yupoh/Desktop/cotton-frontend/src/uikit/components/Tag/StyledTag.tsx"],"names":["styled","getColor","getThemeTextColor","outline","variant","theme","StyledTag","div"],"mappings":"iMAAA,MAAOA,CAAAA,MAAP,KAAqC,mBAArC,CACA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CAOA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,UAAGC,CAAAA,OAAH,MAAGA,OAAH,mBAAYC,OAAZ,CAAYA,OAAZ,uBAAsB,SAAtB,cAAiCC,KAAjC,MAAiCA,KAAjC,OACxBF,CAAAA,OAAO,CAAGF,QAAQ,CAACG,OAAD,CAAUC,KAAV,CAAX,CAA8B,SADb,EAA1B,CAGA,MAAO,IAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,yWAEA,mBAAGJ,CAAAA,OAAH,OAAGA,OAAH,CAAYE,KAAZ,OAAYA,KAAZ,qBAAmBD,OAAnB,CAAmBA,OAAnB,wBAA6B,SAA7B,qBAClBD,CAAAA,OAAO,CAAG,aAAH,CAAmBF,QAAQ,CAACG,OAAD,CAAUC,KAAV,CADhB,EAFA,CAIA,wCAAGD,OAAH,CAAGA,OAAH,wBAAa,SAAb,eAAwBC,KAAxB,OAAwBA,KAAxB,OAAoCJ,CAAAA,QAAQ,CAACG,OAAD,CAAUC,KAAV,CAA5C,EAJA,CAMXH,iBANW,CAgBVA,iBAhBU,CAAf,CAoBP,cAAe,KAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\r\nimport getColor from \"../../util/getColor\";\r\nimport { TagProps } from \"./types\";\r\n\r\ninterface ThemedProps extends TagProps {\r\n  theme: DefaultTheme;\r\n}\r\n\r\nconst getThemeTextColor = ({ outline, variant = \"primary\", theme }: ThemedProps) =>\r\n  outline ? getColor(variant, theme) : \"#ffffff\";\r\n\r\nexport const StyledTag = styled.div<ThemedProps>`\r\n  align-items: center;\r\n  background-color: ${({ outline, theme, variant = \"primary\" }) =>\r\n    outline ? \"transparent\" : getColor(variant, theme)};\r\n  border: 2px solid ${({ variant = \"primary\", theme }) => getColor(variant, theme)};\r\n  border-radius: 16px;\r\n  color: ${getThemeTextColor};\r\n  display: inline-flex;\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  height: 28px;\r\n  line-height: 1.5;\r\n  padding: 0 8px;\r\n  white-space: nowrap;\r\n\r\n  svg {\r\n    fill: ${getThemeTextColor};\r\n  }\r\n`;\r\n\r\nexport default null;\r\n"]},"metadata":{},"sourceType":"module"}