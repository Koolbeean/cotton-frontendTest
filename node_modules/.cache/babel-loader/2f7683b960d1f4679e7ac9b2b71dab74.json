{"ast":null,"code":"import _toConsumableArray from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _taggedTemplateLiteral from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;/* eslint-disable react/no-array-index-key */import React,{Children,isValidElement}from\"react\";import styled from\"styled-components\";import{space}from\"styled-system\";import ChevronRightIcon from\"../Svg/Icons/ChevronRight\";import{jsx as _jsx}from\"react/jsx-runtime\";var Separator=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: currentColor;\\n  display: flex;\\n  justify-content: center;\\n  padding-left: 4px;\\n  padding-right: 4px;\\n\\n  \",\" {\\n    padding-left: 8px;\\n    padding-right: 8px;\\n  }\\n\\n  \",\" {\\n    padding-left: 16px;\\n    padding-right: 16px;\\n  }\\n\"])),function(_ref){var theme=_ref.theme;return theme.mediaQueries.sm;},function(_ref2){var theme=_ref2.theme;return theme.mediaQueries.md;});var StyledBreadcrumbs=styled.ul(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  align-items: center;\\n  color: \",\";\\n  display: flex;\\n  flex-wrap: wrap;\\n  list-style-type: none;\\n\\n  \",\"\\n\"])),function(_ref3){var theme=_ref3.theme;return theme.colors.textDisabled;},space);var insertSeparators=function insertSeparators(items,separator){return items.reduce(function(accum,item,index){if(index===0){return[].concat(_toConsumableArray(accum),[item]);}return[].concat(_toConsumableArray(accum),[/*#__PURE__*/_jsx(Separator,{\"aria-hidden\":true,children:separator},\"seperator-\".concat(index)),item]);},[]);};var DefaultSeparator=/*#__PURE__*/_jsx(ChevronRightIcon,{color:\"currentColor\",width:\"24px\"});var Breadcrumbs=function Breadcrumbs(_ref4){var _ref4$separator=_ref4.separator,separator=_ref4$separator===void 0?DefaultSeparator:_ref4$separator,children=_ref4.children;var validItems=Children.toArray(children).filter(function(child){return/*#__PURE__*/isValidElement(child);});var items=insertSeparators(validItems,separator);return/*#__PURE__*/_jsx(StyledBreadcrumbs,{children:items.map(function(item,index){return/*#__PURE__*/_jsx(\"li\",{children:item},\"child-\".concat(index));})});};export default Breadcrumbs;","map":{"version":3,"sources":["C:/Users/yupoh/Desktop/cotton-frontend/src/uikit/components/Breadcrumbs/Breadcrumbs.tsx"],"names":["React","Children","isValidElement","styled","space","ChevronRightIcon","Separator","div","theme","mediaQueries","sm","md","StyledBreadcrumbs","ul","colors","textDisabled","insertSeparators","items","separator","reduce","accum","item","index","DefaultSeparator","Breadcrumbs","children","validItems","toArray","filter","child","map"],"mappings":"uXAAA,6CACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,cAA1B,KAA2D,OAA3D,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,KAAT,KAAsB,eAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,2BAA7B,C,2CAGA,GAAMC,CAAAA,SAAS,CAAGH,MAAM,CAACI,GAAV,kVAQX,kBAAGC,CAAAA,KAAH,MAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBC,EAAlC,EARW,CAaX,mBAAGF,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACC,YAAN,CAAmBE,EAAlC,EAbW,CAAf,CAmBA,GAAMC,CAAAA,iBAAiB,CAAGT,MAAM,CAACU,EAAV,qLAEZ,mBAAGL,CAAAA,KAAH,OAAGA,KAAH,OAAeA,CAAAA,KAAK,CAACM,MAAN,CAAaC,YAA5B,EAFY,CAOnBX,KAPmB,CAAvB,CAUA,GAAMY,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAqBC,SAArB,QACvBD,CAAAA,KAAK,CAACE,MAAN,CAAa,SAACC,KAAD,CAAqBC,IAArB,CAA2BC,KAA3B,CAAqC,CAChD,GAAIA,KAAK,GAAK,CAAd,CAAiB,CACf,mCAAWF,KAAX,GAAkBC,IAAlB,GACD,CAED,mCACKD,KADL,gBAEE,KAAC,SAAD,EAAW,kBAAX,UACGF,SADH,sBAAyCI,KAAzC,EAFF,CAKED,IALF,GAOD,CAZD,CAYG,EAZH,CADuB,EAAzB,CAeA,GAAME,CAAAA,gBAAgB,cAAG,KAAC,gBAAD,EAAkB,KAAK,CAAC,cAAxB,CAAuC,KAAK,CAAC,MAA7C,EAAzB,CAEA,GAAMC,CAAAA,WAAuC,CAAG,QAA1CA,CAAAA,WAA0C,OAAgD,2BAA7CN,SAA6C,CAA7CA,SAA6C,0BAAjCK,gBAAiC,iBAAfE,QAAe,OAAfA,QAAe,CAC9F,GAAMC,CAAAA,UAAU,CAAGzB,QAAQ,CAAC0B,OAAT,CAAiBF,QAAjB,EAA2BG,MAA3B,CAAkC,SAACC,KAAD,qBAAW3B,cAAc,CAAC2B,KAAD,CAAzB,EAAlC,CAAnB,CACA,GAAMZ,CAAAA,KAAK,CAAGD,gBAAgB,CAACU,UAAD,CAAaR,SAAb,CAA9B,CAEA,mBACE,KAAC,iBAAD,WACGD,KAAK,CAACa,GAAN,CAAU,SAACT,IAAD,CAAOC,KAAP,qBACT,oBAA4BD,IAA5B,kBAAkBC,KAAlB,EADS,EAAV,CADH,EADF,CAOD,CAXD,CAaA,cAAeE,CAAAA,WAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\r\nimport React, { Children, isValidElement, ReactNode } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { space } from \"styled-system\";\r\nimport ChevronRightIcon from \"../Svg/Icons/ChevronRight\";\r\nimport { BreadcrumbsProps } from \"./types\";\r\n\r\nconst Separator = styled.div`\r\n  align-items: center;\r\n  color: currentColor;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 8px;\r\n    padding-right: 8px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-left: 16px;\r\n    padding-right: 16px;\r\n  }\r\n`;\r\n\r\nconst StyledBreadcrumbs = styled.ul`\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.textDisabled};\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style-type: none;\r\n\r\n  ${space}\r\n`;\r\n\r\nconst insertSeparators = (items: ReactNode[], separator: BreadcrumbsProps[\"separator\"]) =>\r\n  items.reduce((accum: ReactNode[], item, index) => {\r\n    if (index === 0) {\r\n      return [...accum, item];\r\n    }\r\n\r\n    return [\r\n      ...accum,\r\n      <Separator aria-hidden key={`seperator-${index}`}>\r\n        {separator}\r\n      </Separator>,\r\n      item,\r\n    ];\r\n  }, []);\r\n\r\nconst DefaultSeparator = <ChevronRightIcon color=\"currentColor\" width=\"24px\" />;\r\n\r\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({ separator = DefaultSeparator, children }) => {\r\n  const validItems = Children.toArray(children).filter((child) => isValidElement(child));\r\n  const items = insertSeparators(validItems, separator);\r\n\r\n  return (\r\n    <StyledBreadcrumbs>\r\n      {items.map((item, index) => (\r\n        <li key={`child-${index}`}>{item}</li>\r\n      ))}\r\n    </StyledBreadcrumbs>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;\r\n"]},"metadata":{},"sourceType":"module"}