{"ast":null,"code":"import _slicedToArray from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/yupoh/Desktop/cotton-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{useMemo,useReducer,useEffect,useCallback}from\"react\";import noop from\"lodash/noop\";import{byTextAscending,byTextDescending}from\"./utils\";var sortByColumn=function sortByColumn(data,sortColumn,columns){var isAscending=null;var sortedRows=_toConsumableArray(data);columns.forEach(function(column){// if the row was found\nif(sortColumn===column.name){isAscending=column.sorted.asc;if(column.sort){sortedRows=isAscending?data.sort(column.sort):data.sort(column.sort).reverse();// default to sort by string\n}else{sortedRows=isAscending?data.sort(byTextAscending(function(object){return object.original[sortColumn];})):data.sort(byTextDescending(function(object){return object.original[sortColumn];}));}}});return sortedRows;};var getPaginatedData=function getPaginatedData(rows,perPage,page){var start=(page-1)*perPage;var end=start+perPage;return rows.slice(start,end);};var getColumnsByName=function getColumnsByName(columns){var columnsByName={};columns.forEach(function(column){var col={name:column.name,label:column.label};if(column.render){col.render=column.render;}col.hidden=column.hidden;columnsByName[column.name]=col;});return columnsByName;};var createReducer=function createReducer(){return function(state,action){var rows=[];var nextPage=0;var prevPage=0;var isAscending=null;var sortedRows=[];var columnCopy=[];var filteredRows=[];var selectedRowsById={};var stateCopy=_objectSpread({},state);var rowIds={};switch(action.type){case\"SET_ROWS\":rows=_toConsumableArray(action.data);// preserve sorting if a sort is already enabled when data changes\nif(state.sortColumn){rows=sortByColumn(action.data,state.sortColumn,state.columns);}if(state.paginationEnabled===true){rows=getPaginatedData(rows,state.pagination.perPage,state.pagination.page);}if(state.paginationEnabled===true){rows=getPaginatedData(rows,state.pagination.perPage,state.pagination.page);}columnCopy=state.columns.map(function(column){if(state.sortColumn===column.name){return _objectSpread(_objectSpread({},column),{},{sorted:{on:true,asc:column.sorted.asc}});}return column;});return _objectSpread(_objectSpread({},state),{},{rows:rows,originalRows:action.data,columns:columnCopy});case\"NEXT_PAGE\":nextPage=state.pagination.page+1;return _objectSpread(_objectSpread({},state),{},{rows:getPaginatedData(state.originalRows,state.pagination.perPage,nextPage),pagination:_objectSpread(_objectSpread({},state.pagination),{},{page:nextPage,canNext:nextPage*state.pagination.perPage<state.originalRows.length,canPrev:nextPage!==1})});case\"PREV_PAGE\":prevPage=state.pagination.page===1?1:state.pagination.page-1;return _objectSpread(_objectSpread({},state),{},{rows:getPaginatedData(state.originalRows,state.pagination.perPage,prevPage),pagination:_objectSpread(_objectSpread({},state.pagination),{},{page:prevPage,canNext:prevPage*state.pagination.perPage<state.originalRows.length,canPrev:prevPage!==1})});case\"TOGGLE_SORT\":if(!(action.columnName in state.columnsByName)){throw new Error(\"Invalid column, \".concat(action.columnName,\" not found\"));}// loop through all columns and set the sort parameter to off unless\n// it's the specified column (only one column at a time for )\ncolumnCopy=state.columns.map(function(column){// if the row was found\nif(action.columnName===column.name){if(action.isAscOverride!==undefined){// force the sort order\nisAscending=action.isAscOverride;}else{// if it's undefined, start by setting to ascending, otherwise toggle\nisAscending=column.sorted.asc===undefined?true:!column.sorted.asc;}if(column.sort){sortedRows=isAscending?state.rows.sort(column.sort):state.rows.sort(column.sort).reverse();// default to sort by string\n}else{sortedRows=isAscending?state.rows.sort(byTextAscending(function(object){return object.original[action.columnName];})):state.rows.sort(byTextDescending(function(object){return object.original[action.columnName];}));}return _objectSpread(_objectSpread({},column),{},{sorted:{on:true,asc:isAscending}});}// set sorting to false for all other columns\nreturn _objectSpread(_objectSpread({},column),{},{sorted:{on:false,asc:false}});});return _objectSpread(_objectSpread({},state),{},{columns:columnCopy,rows:sortedRows,sortColumn:action.columnName,columnsByName:getColumnsByName(columnCopy)});case\"GLOBAL_FILTER\":filteredRows=action.filter(state.originalRows);selectedRowsById={};state.selectedRows.forEach(function(row){var _row$selected;selectedRowsById[row.id]=(_row$selected=row.selected)!==null&&_row$selected!==void 0?_row$selected:false;});return _objectSpread(_objectSpread({},state),{},{rows:filteredRows.map(function(row){return selectedRowsById[row.id]?_objectSpread(_objectSpread({},row),{},{selected:selectedRowsById[row.id]}):_objectSpread({},row);}),filterOn:true});case\"SELECT_ROW\":stateCopy=_objectSpread({},state);stateCopy.rows=stateCopy.rows.map(function(row){var newRow=_objectSpread({},row);if(newRow.id===action.rowId){newRow.selected=!newRow.selected;}return newRow;});stateCopy.originalRows=stateCopy.originalRows.map(function(row){var newRow=_objectSpread({},row);if(newRow.id===action.rowId){newRow.selected=!newRow.selected;}return newRow;});stateCopy.selectedRows=stateCopy.originalRows.filter(function(row){return row.selected===true;});stateCopy.toggleAllState=stateCopy.selectedRows.length===stateCopy.rows.length?stateCopy.toggleAllState=true:stateCopy.toggleAllState=false;return stateCopy;case\"SEARCH_STRING\":stateCopy=_objectSpread({},state);stateCopy.rows=stateCopy.originalRows.filter(function(row){return row.cells.filter(function(cell){if(cell.value.includes(action.searchString)){return true;}return false;}).length>0;});return stateCopy;case\"TOGGLE_ALL\":if(state.selectedRows.length<state.rows.length){stateCopy.rows=stateCopy.rows.map(function(row){rowIds[row.id]=true;return _objectSpread(_objectSpread({},row),{},{selected:true});});stateCopy.toggleAllState=true;}else{stateCopy.rows=stateCopy.rows.map(function(row){rowIds[row.id]=false;return _objectSpread(_objectSpread({},row),{},{selected:false});});stateCopy.toggleAllState=false;}stateCopy.originalRows=stateCopy.originalRows.map(function(row){return row.id in rowIds?_objectSpread(_objectSpread({},row),{},{selected:rowIds[row.id]}):_objectSpread({},row);});stateCopy.selectedRows=stateCopy.originalRows.filter(function(row){return row.selected;});return stateCopy;default:throw new Error(\"Invalid reducer action\");}};};var sortDataInOrder=function sortDataInOrder(data,columns){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn data.map(function(row){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar newRow={};columns.forEach(function(column){if(!(column.name in row)){throw new Error(\"Invalid row data, \".concat(column.name,\" not found\"));}newRow[column.name]=row[column.name];});return newRow;});};export var makeRender=function makeRender(value,render,row){return render?function(){return render({row:row,value:value});}:function(){return value;};};var makeHeaderRender=function makeHeaderRender(label,render){return render?function(){return render({label:label});}:function(){return label;};};export var useTable=function useTable(columns,data,options){var columnsWithSorting=useMemo(function(){return columns.map(function(column){return _objectSpread(_objectSpread({},column),{},{label:column.label?column.label:column.name,hidden:column.hidden?column.hidden:false,sort:column.sort,sorted:{on:false,asc:false}});});},[columns]);var columnsByName=useMemo(function(){return getColumnsByName(columnsWithSorting);},[columnsWithSorting]);var tableData=useMemo(function(){var sortedData=sortDataInOrder(data,columnsWithSorting);var newData=sortedData.map(function(row,idx){return{id:idx,selected:false,hidden:false,original:row,cells:Object.entries(row).map(function(_ref){var _ref2=_slicedToArray(_ref,2),column=_ref2[0],value=_ref2[1];return{hidden:columnsByName[column].hidden,field:column,value:value,render:makeRender(value,columnsByName[column].render,row)};}).filter(function(cell){return!cell.hidden;})};});return newData;},[data,columnsWithSorting,columnsByName]);var reducer=createReducer();var _useReducer=useReducer(reducer,{columns:columnsWithSorting,columnsByName:columnsByName,originalRows:tableData,rows:tableData,selectedRows:[],toggleAllState:false,filterOn:!!(options===null||options===void 0?void 0:options.filter),sortColumn:options===null||options===void 0?void 0:options.sortColumn,paginationEnabled:!!(options===null||options===void 0?void 0:options.pagination),pagination:{page:1,perPage:10,canNext:true,canPrev:false,// eslint-disable-next-line @typescript-eslint/no-empty-function\nnextPage:noop,// eslint-disable-next-line @typescript-eslint/no-empty-function\nprevPage:noop}}),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];state.pagination.nextPage=useCallback(function(){dispatch({type:\"NEXT_PAGE\"});},[dispatch]);state.pagination.prevPage=useCallback(function(){return dispatch({type:\"PREV_PAGE\"});},[dispatch]);useEffect(function(){dispatch({type:\"SET_ROWS\",data:tableData});},[tableData]);var headers=useMemo(function(){return _toConsumableArray(state.columns.map(function(column){var label=column.label?column.label:column.name;return _objectSpread(_objectSpread({},column),{},{render:makeHeaderRender(label,column.headerRender)});}));},[state.columns]);useEffect(function(){if(options&&options.filter){dispatch({type:\"GLOBAL_FILTER\",filter:options.filter});}});return{headers:headers.filter(function(column){return!column.hidden;}),rows:state.rows,originalRows:state.originalRows,selectedRows:state.selectedRows,dispatch:dispatch,selectRow:function selectRow(rowId){return dispatch({type:\"SELECT_ROW\",rowId:rowId});},toggleAll:function toggleAll(){return dispatch({type:\"TOGGLE_ALL\"});},toggleSort:function toggleSort(columnName,isAscOverride){return dispatch({type:\"TOGGLE_SORT\",columnName:columnName,isAscOverride:isAscOverride});},setSearchString:function setSearchString(searchString){return dispatch({type:\"SEARCH_STRING\",searchString:searchString});},pagination:state.pagination,toggleAllState:state.toggleAllState};};","map":{"version":3,"sources":["C:/Users/yupoh/Desktop/cotton-frontend/src/uikit/components/Table/hooks.tsx"],"names":["useMemo","useReducer","useEffect","useCallback","noop","byTextAscending","byTextDescending","sortByColumn","data","sortColumn","columns","isAscending","sortedRows","forEach","column","name","sorted","asc","sort","reverse","object","original","getPaginatedData","rows","perPage","page","start","end","slice","getColumnsByName","columnsByName","col","label","render","hidden","createReducer","state","action","nextPage","prevPage","columnCopy","filteredRows","selectedRowsById","stateCopy","rowIds","type","paginationEnabled","pagination","map","on","originalRows","canNext","length","canPrev","columnName","Error","isAscOverride","undefined","filter","selectedRows","row","id","selected","filterOn","newRow","rowId","toggleAllState","cells","cell","value","includes","searchString","sortDataInOrder","makeRender","makeHeaderRender","useTable","options","columnsWithSorting","tableData","sortedData","newData","idx","Object","entries","field","reducer","dispatch","headers","headerRender","selectRow","toggleAll","toggleSort","setSearchString"],"mappings":"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","sourcesContent":["import { useMemo, useReducer, useEffect, ReactNode, useCallback } from \"react\";\r\nimport noop from \"lodash/noop\";\r\n\r\nimport {\r\n  ColumnByNamesType,\r\n  ColumnType,\r\n  TableState,\r\n  TableAction,\r\n  DataType,\r\n  UseTableReturnType,\r\n  UseTableOptionsType,\r\n  RowType,\r\n  HeaderType,\r\n  HeaderRenderType,\r\n  ColumnStateType,\r\n} from \"./types\";\r\nimport { byTextAscending, byTextDescending } from \"./utils\";\r\n\r\nconst sortByColumn = <T extends DataType>(\r\n  data: RowType<T>[],\r\n  sortColumn: string,\r\n  columns: ColumnStateType<T>[]\r\n): RowType<T>[] => {\r\n  let isAscending = null;\r\n  let sortedRows: RowType<T>[] = [...data];\r\n\r\n  columns.forEach((column) => {\r\n    // if the row was found\r\n    if (sortColumn === column.name) {\r\n      isAscending = column.sorted.asc;\r\n\r\n      if (column.sort) {\r\n        sortedRows = isAscending ? data.sort(column.sort) : data.sort(column.sort).reverse();\r\n        // default to sort by string\r\n      } else {\r\n        sortedRows = isAscending\r\n          ? data.sort(byTextAscending((object) => object.original[sortColumn]))\r\n          : data.sort(byTextDescending((object) => object.original[sortColumn]));\r\n      }\r\n    }\r\n  });\r\n\r\n  return sortedRows;\r\n};\r\n\r\nconst getPaginatedData = <T extends DataType>(rows: RowType<T>[], perPage: number, page: number) => {\r\n  const start = (page - 1) * perPage;\r\n  const end = start + perPage;\r\n  return rows.slice(start, end);\r\n};\r\n\r\nconst getColumnsByName = <T extends DataType>(columns: ColumnType<T>[]): ColumnByNamesType<T> => {\r\n  const columnsByName: ColumnByNamesType<T> = {};\r\n  columns.forEach((column) => {\r\n    const col: ColumnType<T> = {\r\n      name: column.name,\r\n      label: column.label,\r\n    };\r\n\r\n    if (column.render) {\r\n      col.render = column.render;\r\n    }\r\n    col.hidden = column.hidden;\r\n    columnsByName[column.name] = col;\r\n  });\r\n\r\n  return columnsByName;\r\n};\r\n\r\nconst createReducer = <T extends DataType>() => (state: TableState<T>, action: TableAction<T>): TableState<T> => {\r\n  let rows = [];\r\n  let nextPage = 0;\r\n  let prevPage = 0;\r\n  let isAscending = null;\r\n  let sortedRows: RowType<T>[] = [];\r\n  let columnCopy = [];\r\n  let filteredRows = [];\r\n  let selectedRowsById: { [key: number]: boolean } = {};\r\n  let stateCopy: TableState<T> = { ...state };\r\n  const rowIds: { [key: number]: boolean } = {};\r\n\r\n  switch (action.type) {\r\n    case \"SET_ROWS\":\r\n      rows = [...action.data];\r\n      // preserve sorting if a sort is already enabled when data changes\r\n      if (state.sortColumn) {\r\n        rows = sortByColumn(action.data, state.sortColumn, state.columns);\r\n      }\r\n\r\n      if (state.paginationEnabled === true) {\r\n        rows = getPaginatedData(rows, state.pagination.perPage, state.pagination.page);\r\n      }\r\n\r\n      if (state.paginationEnabled === true) {\r\n        rows = getPaginatedData(rows, state.pagination.perPage, state.pagination.page);\r\n      }\r\n\r\n      columnCopy = state.columns.map((column) => {\r\n        if (state.sortColumn === column.name) {\r\n          return {\r\n            ...column,\r\n            sorted: {\r\n              on: true,\r\n              asc: column.sorted.asc,\r\n            },\r\n          };\r\n        }\r\n\r\n        return column;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        rows,\r\n        originalRows: action.data,\r\n        columns: columnCopy,\r\n      };\r\n\r\n    case \"NEXT_PAGE\":\r\n      nextPage = state.pagination.page + 1;\r\n      return {\r\n        ...state,\r\n        rows: getPaginatedData(state.originalRows, state.pagination.perPage, nextPage),\r\n        pagination: {\r\n          ...state.pagination,\r\n          page: nextPage,\r\n          canNext: nextPage * state.pagination.perPage < state.originalRows.length,\r\n          canPrev: nextPage !== 1,\r\n        },\r\n      };\r\n    case \"PREV_PAGE\":\r\n      prevPage = state.pagination.page === 1 ? 1 : state.pagination.page - 1;\r\n\r\n      return {\r\n        ...state,\r\n        rows: getPaginatedData(state.originalRows, state.pagination.perPage, prevPage),\r\n        pagination: {\r\n          ...state.pagination,\r\n          page: prevPage,\r\n          canNext: prevPage * state.pagination.perPage < state.originalRows.length,\r\n          canPrev: prevPage !== 1,\r\n        },\r\n      };\r\n    case \"TOGGLE_SORT\":\r\n      if (!(action.columnName in state.columnsByName)) {\r\n        throw new Error(`Invalid column, ${action.columnName} not found`);\r\n      }\r\n\r\n      // loop through all columns and set the sort parameter to off unless\r\n      // it's the specified column (only one column at a time for )\r\n      columnCopy = state.columns.map((column) => {\r\n        // if the row was found\r\n        if (action.columnName === column.name) {\r\n          if (action.isAscOverride !== undefined) {\r\n            // force the sort order\r\n            isAscending = action.isAscOverride;\r\n          } else {\r\n            // if it's undefined, start by setting to ascending, otherwise toggle\r\n            isAscending = column.sorted.asc === undefined ? true : !column.sorted.asc;\r\n          }\r\n\r\n          if (column.sort) {\r\n            sortedRows = isAscending ? state.rows.sort(column.sort) : state.rows.sort(column.sort).reverse();\r\n            // default to sort by string\r\n          } else {\r\n            sortedRows = isAscending\r\n              ? state.rows.sort(byTextAscending((object) => object.original[action.columnName]))\r\n              : state.rows.sort(byTextDescending((object) => object.original[action.columnName]));\r\n          }\r\n          return {\r\n            ...column,\r\n            sorted: {\r\n              on: true,\r\n              asc: isAscending,\r\n            },\r\n          };\r\n        }\r\n        // set sorting to false for all other columns\r\n        return {\r\n          ...column,\r\n          sorted: {\r\n            on: false,\r\n            asc: false,\r\n          },\r\n        };\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        columns: columnCopy,\r\n        rows: sortedRows,\r\n        sortColumn: action.columnName,\r\n        columnsByName: getColumnsByName(columnCopy),\r\n      };\r\n    case \"GLOBAL_FILTER\":\r\n      filteredRows = action.filter(state.originalRows);\r\n      selectedRowsById = {};\r\n      state.selectedRows.forEach((row) => {\r\n        selectedRowsById[row.id] = row.selected ?? false;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        rows: filteredRows.map((row) => {\r\n          return selectedRowsById[row.id] ? { ...row, selected: selectedRowsById[row.id] } : { ...row };\r\n        }),\r\n        filterOn: true,\r\n      };\r\n    case \"SELECT_ROW\":\r\n      stateCopy = { ...state };\r\n\r\n      stateCopy.rows = stateCopy.rows.map((row) => {\r\n        const newRow = { ...row };\r\n        if (newRow.id === action.rowId) {\r\n          newRow.selected = !newRow.selected;\r\n        }\r\n        return newRow;\r\n      });\r\n\r\n      stateCopy.originalRows = stateCopy.originalRows.map((row) => {\r\n        const newRow = { ...row };\r\n        if (newRow.id === action.rowId) {\r\n          newRow.selected = !newRow.selected;\r\n        }\r\n        return newRow;\r\n      });\r\n\r\n      stateCopy.selectedRows = stateCopy.originalRows.filter((row) => row.selected === true);\r\n\r\n      stateCopy.toggleAllState =\r\n        stateCopy.selectedRows.length === stateCopy.rows.length\r\n          ? (stateCopy.toggleAllState = true)\r\n          : (stateCopy.toggleAllState = false);\r\n\r\n      return stateCopy;\r\n    case \"SEARCH_STRING\":\r\n      stateCopy = { ...state };\r\n      stateCopy.rows = stateCopy.originalRows.filter((row) => {\r\n        return (\r\n          row.cells.filter((cell) => {\r\n            if (cell.value.includes(action.searchString)) {\r\n              return true;\r\n            }\r\n            return false;\r\n          }).length > 0\r\n        );\r\n      });\r\n      return stateCopy;\r\n    case \"TOGGLE_ALL\":\r\n      if (state.selectedRows.length < state.rows.length) {\r\n        stateCopy.rows = stateCopy.rows.map((row) => {\r\n          rowIds[row.id] = true;\r\n          return { ...row, selected: true };\r\n        });\r\n\r\n        stateCopy.toggleAllState = true;\r\n      } else {\r\n        stateCopy.rows = stateCopy.rows.map((row) => {\r\n          rowIds[row.id] = false;\r\n\r\n          return { ...row, selected: false };\r\n        });\r\n        stateCopy.toggleAllState = false;\r\n      }\r\n\r\n      stateCopy.originalRows = stateCopy.originalRows.map((row) => {\r\n        return row.id in rowIds ? { ...row, selected: rowIds[row.id] } : { ...row };\r\n      });\r\n\r\n      stateCopy.selectedRows = stateCopy.originalRows.filter((row) => row.selected);\r\n\r\n      return stateCopy;\r\n    default:\r\n      throw new Error(\"Invalid reducer action\");\r\n  }\r\n};\r\n\r\nconst sortDataInOrder = <T extends DataType>(data: T[], columns: ColumnType<T>[]): T[] => {\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  return data.map((row: any) => {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const newRow: any = {};\r\n    columns.forEach((column) => {\r\n      if (!(column.name in row)) {\r\n        throw new Error(`Invalid row data, ${column.name} not found`);\r\n      }\r\n      newRow[column.name] = row[column.name];\r\n    });\r\n    return newRow;\r\n  });\r\n};\r\n\r\nexport const makeRender = <T extends DataType>(\r\n  // eslint-disable-next-line\r\n  value: any,\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  render: (({ value: val, row }: { value: any; row: T }) => ReactNode) | undefined,\r\n  row: T\r\n): (() => React.ReactNode) => {\r\n  return render ? () => render({ row, value }) : () => value;\r\n};\r\n\r\nconst makeHeaderRender = (label: string, render?: HeaderRenderType) => {\r\n  return render ? () => render({ label }) : () => label;\r\n};\r\n\r\nexport const useTable = <T extends DataType>(\r\n  columns: ColumnType<T>[],\r\n  data: T[],\r\n  options?: UseTableOptionsType<T>\r\n): UseTableReturnType<T> => {\r\n  const columnsWithSorting: ColumnStateType<T>[] = useMemo(\r\n    () =>\r\n      columns.map((column) => {\r\n        return {\r\n          ...column,\r\n          label: column.label ? column.label : column.name,\r\n          hidden: column.hidden ? column.hidden : false,\r\n          sort: column.sort,\r\n          sorted: {\r\n            on: false,\r\n            asc: false,\r\n          },\r\n        };\r\n      }),\r\n    [columns]\r\n  );\r\n  const columnsByName = useMemo(() => getColumnsByName(columnsWithSorting), [columnsWithSorting]);\r\n\r\n  const tableData: RowType<T>[] = useMemo(() => {\r\n    const sortedData = sortDataInOrder(data, columnsWithSorting);\r\n\r\n    const newData = sortedData.map((row, idx) => {\r\n      return {\r\n        id: idx,\r\n        selected: false,\r\n        hidden: false,\r\n        original: row,\r\n        cells: Object.entries(row)\r\n          .map(([column, value]) => {\r\n            return {\r\n              hidden: columnsByName[column].hidden,\r\n              field: column,\r\n              value,\r\n              render: makeRender(value, columnsByName[column].render, row),\r\n            };\r\n          })\r\n          .filter((cell) => !cell.hidden),\r\n      };\r\n    });\r\n    return newData;\r\n  }, [data, columnsWithSorting, columnsByName]);\r\n\r\n  const reducer = createReducer<T>();\r\n\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    columns: columnsWithSorting,\r\n    columnsByName,\r\n    originalRows: tableData,\r\n    rows: tableData,\r\n    selectedRows: [],\r\n    toggleAllState: false,\r\n    filterOn: !!options?.filter,\r\n    sortColumn: options?.sortColumn,\r\n    paginationEnabled: !!options?.pagination,\r\n    pagination: {\r\n      page: 1,\r\n      perPage: 10,\r\n      canNext: true,\r\n      canPrev: false,\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      nextPage: noop,\r\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n      prevPage: noop,\r\n    },\r\n  });\r\n\r\n  state.pagination.nextPage = useCallback(() => {\r\n    dispatch({ type: \"NEXT_PAGE\" });\r\n  }, [dispatch]);\r\n  state.pagination.prevPage = useCallback(() => dispatch({ type: \"PREV_PAGE\" }), [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"SET_ROWS\", data: tableData });\r\n  }, [tableData]);\r\n\r\n  const headers: HeaderType<T>[] = useMemo(() => {\r\n    return [\r\n      ...state.columns.map((column) => {\r\n        const label = column.label ? column.label : column.name;\r\n        return {\r\n          ...column,\r\n          render: makeHeaderRender(label, column.headerRender),\r\n        };\r\n      }),\r\n    ];\r\n  }, [state.columns]);\r\n\r\n  useEffect(() => {\r\n    if (options && options.filter) {\r\n      dispatch({ type: \"GLOBAL_FILTER\", filter: options.filter });\r\n    }\r\n  });\r\n\r\n  return {\r\n    headers: headers.filter((column) => !column.hidden),\r\n    rows: state.rows,\r\n    originalRows: state.originalRows,\r\n    selectedRows: state.selectedRows,\r\n    dispatch,\r\n    selectRow: (rowId: number) => dispatch({ type: \"SELECT_ROW\", rowId }),\r\n    toggleAll: () => dispatch({ type: \"TOGGLE_ALL\" }),\r\n    toggleSort: (columnName: string, isAscOverride?: boolean) =>\r\n      dispatch({ type: \"TOGGLE_SORT\", columnName, isAscOverride }),\r\n    setSearchString: (searchString: string) => dispatch({ type: \"SEARCH_STRING\", searchString }),\r\n    pagination: state.pagination,\r\n    toggleAllState: state.toggleAllState,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}