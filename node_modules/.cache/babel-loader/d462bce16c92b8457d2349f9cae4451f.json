{"ast":null,"code":"import styled from \"styled-components\";\nimport { space } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\n\nconst getColor = ({\n  color,\n  theme\n}) => {\n  return getThemeValue(`colors.${color}`, color)(theme);\n};\n\nconst getFontSize = ({\n  fontSize,\n  small\n}) => {\n  return small ? \"14px\" : fontSize || \"16px\";\n};\n\nconst Text = styled.div`\n  color: ${getColor};\n  font-size: ${getFontSize};\n  font-weight: ${({\n  bold\n}) => bold ? 600 : 400};\n  line-height: 1.5;\n  ${({\n  textTransform\n}) => textTransform && `text-transform: ${textTransform};`}\n  ${space}\n`;\nText.defaultProps = {\n  color: \"text\",\n  small: false\n};\nexport default Text;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/components/Text/Text.tsx"],"names":["styled","space","getThemeValue","getColor","color","theme","getFontSize","fontSize","small","Text","div","bold","textTransform","defaultProps"],"mappings":"AAAA,OAAOA,MAAP,MAAqC,mBAArC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAOA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAmC;AAClD,SAAOH,aAAa,CAAE,UAASE,KAAM,EAAjB,EAAoBA,KAApB,CAAb,CAAwCC,KAAxC,CAAP;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAoC;AACtD,SAAOA,KAAK,GAAG,MAAH,GAAYD,QAAQ,IAAI,MAApC;AACD,CAFD;;AAIA,MAAME,IAAI,GAAGT,MAAM,CAACU,GAAe;AACnC,WAAWP,QAAS;AACpB,eAAeG,WAAY;AAC3B,iBAAiB,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAAeA,IAAI,GAAG,GAAH,GAAS,GAAK;AAClD;AACA,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuBA,aAAa,IAAK,mBAAkBA,aAAc,GAAG;AAChF,IAAIX,KAAM;AACV,CAPA;AASAQ,IAAI,CAACI,YAAL,GAAoB;AAClBT,EAAAA,KAAK,EAAE,MADW;AAElBI,EAAAA,KAAK,EAAE;AAFW,CAApB;AAKA,eAAeC,IAAf","sourcesContent":["import styled, { DefaultTheme } from \"styled-components\";\nimport { space } from \"styled-system\";\nimport getThemeValue from \"../../util/getThemeValue\";\nimport { TextProps } from \"./types\";\n\ninterface ThemedProps extends TextProps {\n  theme: DefaultTheme;\n}\n\nconst getColor = ({ color, theme }: ThemedProps) => {\n  return getThemeValue(`colors.${color}`, color)(theme);\n};\n\nconst getFontSize = ({ fontSize, small }: TextProps) => {\n  return small ? \"14px\" : fontSize || \"16px\";\n};\n\nconst Text = styled.div<TextProps>`\n  color: ${getColor};\n  font-size: ${getFontSize};\n  font-weight: ${({ bold }) => (bold ? 600 : 400)};\n  line-height: 1.5;\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\n  ${space}\n`;\n\nText.defaultProps = {\n  color: \"text\",\n  small: false,\n};\n\nexport default Text;\n"]},"metadata":{},"sourceType":"module"}