{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\uikit\\\\widgets\\\\Menu\\\\Logo.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { LogoIcon } from \"../../components/Svg\";\nimport Flex from \"../../components/Flex/Flex\";\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"./icons\";\nimport MenuButton from \"./MenuButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  .mobile-icon {\n    width: 32px;\n    ${({\n  theme\n}) => theme.mediaQueries.nav} {\n      display: none;\n    }\n  }\n  .desktop-icon {\n    width: 156px;\n    display: none;\n    ${({\n  theme\n}) => theme.mediaQueries.nav} {\n      display: block;\n    }\n  }\n`;\n_c = StyledLink;\n\nconst Logo = ({\n  isPushed,\n  togglePush,\n  isDark,\n  href\n}) => {\n  const isAbsoluteUrl = href.startsWith(\"http\");\n\n  const innerLogo = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LogoIcon, {\n      className: \"mobile-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LogoWithText, {\n      className: \"desktop-icon\",\n      isDark: isDark\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n      \"aria-label\": \"Toggle menu\",\n      onClick: togglePush,\n      mr: \"24px\",\n      children: isPushed ? /*#__PURE__*/_jsxDEV(HamburgerCloseIcon, {\n        width: \"24px\",\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(HamburgerIcon, {\n        width: \"24px\",\n        color: \"textSubtle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isAbsoluteUrl ? /*#__PURE__*/_jsxDEV(StyledLink, {\n      as: \"a\",\n      href: href,\n      \"aria-label\": \"Pancake home page\",\n      children: innerLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StyledLink, {\n      to: href,\n      \"aria-label\": \"Pancake home page\",\n      children: innerLogo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Logo;\nexport default Logo;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledLink\");\n$RefreshReg$(_c2, \"Logo\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/widgets/Menu/Logo.tsx"],"names":["React","styled","Link","LogoIcon","Flex","HamburgerIcon","HamburgerCloseIcon","LogoWithText","MenuButton","StyledLink","theme","mediaQueries","nav","Logo","isPushed","togglePush","isDark","href","isAbsoluteUrl","startsWith","innerLogo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,EAA4CH,QAAQ,IAAII,YAAxD,QAA4E,SAA5E;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AASA,MAAMC,UAAU,GAAGR,MAAM,CAACC,IAAD,CAAO;AAChC;AACA;AACA;AACA;AACA,MAAM,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,GAAI;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,GAAI;AAC5C;AACA;AACA;AACA,CAhBA;KAAMH,U;;AAkBN,MAAMI,IAAqB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA,MAAxB;AAAgCC,EAAAA;AAAhC,CAAD,KAA4C;AACxE,QAAMC,aAAa,GAAGD,IAAI,CAACE,UAAL,CAAgB,MAAhB,CAAtB;;AACA,QAAMC,SAAS,gBACb;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,cAAxB;AAAuC,MAAA,MAAM,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;;AAOA,sBACE,QAAC,IAAD;AAAA,4BACE,QAAC,UAAD;AAAY,oBAAW,aAAvB;AAAqC,MAAA,OAAO,EAAED,UAA9C;AAA0D,MAAA,EAAE,EAAC,MAA7D;AAAA,gBACGD,QAAQ,gBACP,QAAC,kBAAD;AAAoB,QAAA,KAAK,EAAC,MAA1B;AAAiC,QAAA,KAAK,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cADO,gBAGP,QAAC,aAAD;AAAe,QAAA,KAAK,EAAC,MAArB;AAA4B,QAAA,KAAK,EAAC;AAAlC;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,YADF,EAQGI,aAAa,gBACZ,QAAC,UAAD;AAAY,MAAA,EAAE,EAAC,GAAf;AAAmB,MAAA,IAAI,EAAED,IAAzB;AAA+B,oBAAW,mBAA1C;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YADY,gBAKZ,QAAC,UAAD;AAAY,MAAA,EAAE,EAAEH,IAAhB;AAAsB,oBAAW,mBAAjC;AAAA,gBACGG;AADH;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA7BD;;MAAMP,I;AA+BN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { LogoIcon } from \"../../components/Svg\";\nimport Flex from \"../../components/Flex/Flex\";\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from \"./icons\";\nimport MenuButton from \"./MenuButton\";\n\ninterface Props {\n  isPushed: boolean;\n  isDark: boolean;\n  togglePush: () => void;\n  href: string;\n}\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  .mobile-icon {\n    width: 32px;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n  }\n  .desktop-icon {\n    width: 156px;\n    display: none;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: block;\n    }\n  }\n`;\n\nconst Logo: React.FC<Props> = ({ isPushed, togglePush, isDark, href }) => {\n  const isAbsoluteUrl = href.startsWith(\"http\");\n  const innerLogo = (\n    <>\n      <LogoIcon className=\"mobile-icon\" />\n      <LogoWithText className=\"desktop-icon\" isDark={isDark} />\n    </>\n  );\n\n  return (\n    <Flex>\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} mr=\"24px\">\n        {isPushed ? (\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\n        ) : (\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\n        )}\n      </MenuButton>\n      {isAbsoluteUrl ? (\n        <StyledLink as=\"a\" href={href} aria-label=\"Pancake home page\">\n          {innerLogo}\n        </StyledLink>\n      ) : (\n        <StyledLink to={href} aria-label=\"Pancake home page\">\n          {innerLogo}\n        </StyledLink>\n      )}\n    </Flex>\n  );\n};\n\nexport default Logo;\n"]},"metadata":{},"sourceType":"module"}