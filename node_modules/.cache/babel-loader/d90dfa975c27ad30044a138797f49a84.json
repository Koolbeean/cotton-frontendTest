{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\testt\\\\src\\\\uikit\\\\widgets\\\\Toast\\\\Toast.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styled from \"styled-components\";\nimport { Alert, alertVariants } from \"../../components/Alert\";\nimport { Text } from \"../../components/Text\";\nimport ToastAction from \"./ToastAction\";\nimport { types } from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING\n};\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`;\n_c = StyledToast;\n\nconst Toast = ({\n  toast,\n  onRemove,\n  style,\n  ttl,\n  ...props\n}) => {\n  _s();\n\n  const timer = useRef();\n  const ref = useRef(null);\n  const removeHandler = useRef(onRemove);\n  const {\n    id,\n    title,\n    description,\n    type,\n    action\n  } = toast;\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler]);\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current);\n  };\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove();\n    }, ttl);\n  };\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove();\n    }, ttl);\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [timer, ttl, handleRemove]);\n  return /*#__PURE__*/_jsxDEV(CSSTransition, {\n    nodeRef: ref,\n    timeout: 250,\n    style: style,\n    ...props,\n    children: /*#__PURE__*/_jsxDEV(StyledToast, {\n      ref: ref,\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        title: title,\n        variant: alertTypeMap[type],\n        onClick: handleRemove,\n        children: action ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            as: \"p\",\n            mb: \"8px\",\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToastAction, {\n            action: action\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Toast, \"IxxRzzmhl11A8TLI7MeLU999VH0=\");\n\n_c2 = Toast;\nexport default Toast;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledToast\");\n$RefreshReg$(_c2, \"Toast\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/widgets/Toast/Toast.tsx"],"names":["React","useCallback","useEffect","useRef","CSSTransition","styled","Alert","alertVariants","Text","ToastAction","types","alertTypeMap","INFO","SUCCESS","DANGER","WARNING","StyledToast","div","theme","mediaQueries","sm","Toast","toast","onRemove","style","ttl","props","timer","ref","removeHandler","id","title","description","type","action","handleRemove","current","handleMouseEnter","clearTimeout","handleMouseLeave","window","setTimeout"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport styled from \"styled-components\";\nimport { Alert, alertVariants } from \"../../components/Alert\";\nimport { Text } from \"../../components/Text\";\nimport ToastAction from \"./ToastAction\";\nimport { ToastProps, types } from \"./types\";\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n};\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`;\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>();\n  const ref = useRef(null);\n  const removeHandler = useRef(onRemove);\n  const { id, title, description, type, action } = toast;\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler]);\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current);\n  };\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove();\n    }, ttl);\n  };\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current);\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove();\n    }, ttl);\n\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, [timer, ttl, handleRemove]);\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {action ? (\n            <>\n              <Text as=\"p\" mb=\"8px\">\n                {description}\n              </Text>\n              <ToastAction action={action} />\n            </>\n          ) : (\n            description\n          )}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  );\n};\n\nexport default Toast;\n"]},"metadata":{},"sourceType":"module"}