{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect } from \"react\";\nimport debounce from \"lodash/debounce\";\nconst defaultParticleOptions = {\n  size: 30,\n  distance: 500\n};\n\nconst createParticle = (x, y, imgSrc, options = {}) => {\n  const {\n    size,\n    distance\n  } = { ...defaultParticleOptions,\n    ...options\n  };\n  const particle = document.createElement(\"particle\");\n  document.body.appendChild(particle);\n  const width = Math.floor(Math.random() * size + 8);\n  const height = width;\n  const destinationX = (Math.random() - 0.5) * distance;\n  const destinationY = (Math.random() - 0.5) * distance;\n  const rotation = Math.random() * 520;\n  const delay = Math.random() * 200;\n  particle.style.backgroundRepeat = \"no-repeat\";\n  particle.style.backgroundSize = \"contain\";\n  particle.style.backgroundImage = `url(${imgSrc})`;\n  particle.style.left = \"0\";\n  particle.style.top = \"0\";\n  particle.style.opacity = \"0\";\n  particle.style.pointerEvents = \"none\";\n  particle.style.position = \"fixed\";\n  particle.style.width = `${width}px`;\n  particle.style.height = `${height}px`;\n  const animation = particle.animate([{\n    transform: `translate(-50%, -50%) translate(${x}px, ${y}px) rotate(0deg)`,\n    opacity: 1\n  }, {\n    transform: `translate(-50%, -50%) translate(${x + destinationX}px, ${y + destinationY}px) rotate(${rotation}deg)`,\n    opacity: 0\n  }], {\n    duration: Math.random() * 1000 + 5000,\n    easing: \"cubic-bezier(0, .9, .57, 1)\",\n    delay\n  });\n\n  animation.onfinish = () => {\n    particle.remove();\n  };\n};\n\nconst defaultOptions = {\n  numberOfParticles: 30,\n  debounceDuration: 200,\n  particleOptions: {}\n};\n/**\n * @see https://css-tricks.com/playing-with-particles-using-the-web-animations-api/\n */\n\nconst useParticleBurst = options => {\n  _s();\n\n  const {\n    selector,\n    numberOfParticles,\n    debounceDuration,\n    imgSrc,\n    disableWhen,\n    particleOptions\n  } = { ...defaultOptions,\n    ...options\n  };\n  const makeListener = useCallback(() => debounce(event => {\n    const isDisabled = disableWhen && disableWhen();\n\n    if (!isDisabled) {\n      const node = event.currentTarget;\n\n      if (event.clientX === 0 && event.clientY === 0) {\n        const {\n          left,\n          width,\n          top,\n          height\n        } = node.getBoundingClientRect();\n        const x = left + width / 2;\n        const y = top + height / 2;\n\n        for (let i = 0; i < numberOfParticles; i += 1) {\n          createParticle(x, y, imgSrc, particleOptions);\n        }\n      } else {\n        for (let i = 0; i < numberOfParticles; i += 1) {\n          createParticle(event.clientX, event.clientY + window.scrollY, imgSrc, particleOptions);\n        }\n      }\n    }\n  }, debounceDuration, {\n    leading: true\n  }), [debounceDuration, numberOfParticles, imgSrc, disableWhen, particleOptions]);\n  const listener = makeListener();\n  const initialize = useCallback(() => {\n    if (selector) {\n      document.querySelectorAll(selector).forEach(element => {\n        element.addEventListener(\"click\", listener);\n      });\n    } else {\n      document.addEventListener(\"click\", listener);\n    }\n  }, [selector, listener]);\n  const teardown = useCallback(() => {\n    if (selector) {\n      document.querySelectorAll(selector).forEach(element => {\n        element.removeEventListener(\"click\", listener);\n      });\n    } else {\n      document.removeEventListener(\"click\", listener);\n    }\n  }, [selector, listener]);\n  useEffect(() => {\n    initialize();\n    return () => teardown();\n  }, [initialize, teardown]);\n  return {\n    initialize,\n    teardown\n  };\n};\n\n_s(useParticleBurst, \"wVYr8lh4eQ1l3RFAOWsptZ2IlTw=\");\n\nexport default useParticleBurst;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/testt/src/uikit/hooks/useParticleBurst.ts"],"names":["useCallback","useEffect","debounce","defaultParticleOptions","size","distance","createParticle","x","y","imgSrc","options","particle","document","createElement","body","appendChild","width","Math","floor","random","height","destinationX","destinationY","rotation","delay","style","backgroundRepeat","backgroundSize","backgroundImage","left","top","opacity","pointerEvents","position","animation","animate","transform","duration","easing","onfinish","remove","defaultOptions","numberOfParticles","debounceDuration","particleOptions","useParticleBurst","selector","disableWhen","makeListener","event","isDisabled","node","currentTarget","clientX","clientY","getBoundingClientRect","i","window","scrollY","leading","listener","initialize","querySelectorAll","forEach","element","addEventListener","teardown","removeEventListener"],"mappings":"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","sourcesContent":["import { useCallback, useEffect } from \"react\";\nimport debounce from \"lodash/debounce\";\n\ntype ParticleOptions = {\n  size?: number;\n  distance?: number;\n};\n\nconst defaultParticleOptions = {\n  size: 30,\n  distance: 500,\n};\n\nconst createParticle = (x: number, y: number, imgSrc: string, options: ParticleOptions = {}) => {\n  const { size, distance } = { ...defaultParticleOptions, ...options };\n\n  const particle = document.createElement(\"particle\");\n  document.body.appendChild(particle);\n\n  const width = Math.floor(Math.random() * size + 8);\n  const height = width;\n  const destinationX = (Math.random() - 0.5) * distance;\n  const destinationY = (Math.random() - 0.5) * distance;\n  const rotation = Math.random() * 520;\n  const delay = Math.random() * 200;\n\n  particle.style.backgroundRepeat = \"no-repeat\";\n  particle.style.backgroundSize = \"contain\";\n  particle.style.backgroundImage = `url(${imgSrc})`;\n  particle.style.left = \"0\";\n  particle.style.top = \"0\";\n  particle.style.opacity = \"0\";\n  particle.style.pointerEvents = \"none\";\n  particle.style.position = \"fixed\";\n  particle.style.width = `${width}px`;\n  particle.style.height = `${height}px`;\n\n  const animation = particle.animate(\n    [\n      {\n        transform: `translate(-50%, -50%) translate(${x}px, ${y}px) rotate(0deg)`,\n        opacity: 1,\n      },\n      {\n        transform: `translate(-50%, -50%) translate(${x + destinationX}px, ${\n          y + destinationY\n        }px) rotate(${rotation}deg)`,\n        opacity: 0,\n      },\n    ],\n    {\n      duration: Math.random() * 1000 + 5000,\n      easing: \"cubic-bezier(0, .9, .57, 1)\",\n      delay,\n    }\n  );\n\n  animation.onfinish = () => {\n    particle.remove();\n  };\n};\n\ntype Options = {\n  imgSrc: string;\n  selector?: string;\n  numberOfParticles?: number;\n  debounceDuration?: number;\n  disableWhen?: () => boolean;\n  particleOptions?: ParticleOptions;\n};\n\nconst defaultOptions = {\n  numberOfParticles: 30,\n  debounceDuration: 200,\n  particleOptions: {},\n};\n\n/**\n * @see https://css-tricks.com/playing-with-particles-using-the-web-animations-api/\n */\nconst useParticleBurst = (options: Options): { initialize: () => void; teardown: () => void } => {\n  const { selector, numberOfParticles, debounceDuration, imgSrc, disableWhen, particleOptions } = {\n    ...defaultOptions,\n    ...options,\n  };\n\n  const makeListener = useCallback(\n    () =>\n      debounce(\n        (event: MouseEvent) => {\n          const isDisabled = disableWhen && disableWhen();\n\n          if (!isDisabled) {\n            const node = event.currentTarget as HTMLElement;\n\n            if (event.clientX === 0 && event.clientY === 0) {\n              const { left, width, top, height } = node.getBoundingClientRect();\n              const x = left + width / 2;\n              const y = top + height / 2;\n\n              for (let i = 0; i < numberOfParticles; i += 1) {\n                createParticle(x, y, imgSrc, particleOptions);\n              }\n            } else {\n              for (let i = 0; i < numberOfParticles; i += 1) {\n                createParticle(event.clientX, event.clientY + window.scrollY, imgSrc, particleOptions);\n              }\n            }\n          }\n        },\n        debounceDuration,\n        { leading: true }\n      ),\n    [debounceDuration, numberOfParticles, imgSrc, disableWhen, particleOptions]\n  );\n  const listener = makeListener();\n\n  const initialize = useCallback(() => {\n    if (selector) {\n      document.querySelectorAll<HTMLElement>(selector).forEach((element) => {\n        element.addEventListener(\"click\", listener);\n      });\n    } else {\n      document.addEventListener(\"click\", listener);\n    }\n  }, [selector, listener]);\n\n  const teardown = useCallback(() => {\n    if (selector) {\n      document.querySelectorAll<HTMLElement>(selector).forEach((element) => {\n        element.removeEventListener(\"click\", listener);\n      });\n    } else {\n      document.removeEventListener(\"click\", listener);\n    }\n  }, [selector, listener]);\n\n  useEffect(() => {\n    initialize();\n    return () => teardown();\n  }, [initialize, teardown]);\n\n  return { initialize, teardown };\n};\n\nexport default useParticleBurst;\n"]},"metadata":{},"sourceType":"module"}